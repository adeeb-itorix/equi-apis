{
  "openapi" : "3.0.3",
  "info" : {
    "version" : "2.0",
    "title" : "Organizational Hierarchy APIs",
    "description" : "API Documentation for Organizational Hierarchy APIs\n\n**Supported Client Type:**\n* ```JWT``` - User JWT\n\n* ```SVC``` - Service Token JWT\n"
  },
  "servers" : [ {
    "url" : "http://diapi.npclouda.equinix.com/",
    "x-name" : "Server1"
  } ],
  "security" : [ {
    "Authorization" : [ ],
    "X-AUTH-APIKEY" : [ ]
  }, {
    "X-AUTH-CLIENT-AUTHZ" : [ ],
    "X-AUTH-APIKEY" : [ ]
  } ],
  "tags" : [ {
    "name" : "Organization",
    "description" : "Organization related APIs"
  }, {
    "name" : "Project",
    "description" : "Project related APIs"
  } ],
  "paths" : {
    "/catalog/v1/apps" : {
      "get" : {
        "tags" : [ "App" ],
        "summary" : "To retrieve all apps",
        "description" : "```JWT```\n",
        "operationId" : "getAllApps",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all app catalog details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppResponse"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "Resource not found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "deprecated" : false
      }
    },
    "/catalog/v1/apps/{appNumber}/products" : {
      "get" : {
        "tags" : [ "App" ],
        "summary" : "To retrieve all products under the given app",
        "description" : "```JWT```\n",
        "operationId" : "getProductsByAppNumber",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appNumber",
          "in" : "path",
          "description" : "appNumber",
          "required" : true,
          "example" : "0001",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all products",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "Resource not found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "deprecated" : false
      }
    },
    "/catalog/v1/products" : {
      "get" : {
        "tags" : [ "App" ],
        "summary" : "To retrieve all products including App information",
        "description" : "```JWT```\n",
        "operationId" : "getAllProducts",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all products",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "Resource not found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/isCRHMigrated" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve the root Org associated to the given cust org along with products information",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getRootOrgProducts",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-AUTH-ORG-ID",
          "in" : "header",
          "description" : "Customer organization ID from JWT token",
          "required" : false,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "custOrgs",
          "in" : "query",
          "description" : "Cust Organization ID's to be filtered against",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "product",
          "in" : "query",
          "description" : "Product name",
          "required" : false,
          "example" : "ECX",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "query",
          "description" : "Resource Type",
          "required" : false,
          "example" : "L2_Connection",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved Customer Organization Root and associated Products",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CrhRootOrgProductResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/rootOrg" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To determine whether the cust-org is CRH enabled or not",
        "description" : "```JWT``` ```SVC```\n\nThis is an Organization API, used by clients to check whether CRH hierarchy is enabled for the cust org or not. <BR> A cust-org can be either reseller or subcustomer or none.\n",
        "operationId" : "getRootOrg",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-AUTH-ORG-ID",
          "in" : "header",
          "description" : "Customer organization id, will be considered in absence of both userName and custOrgId in query parameter",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "Portal Login User Name, this field takes precedence over X-AUTH-ORG-ID",
          "required" : false,
          "example" : "test@equinix.com",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "custOrgId",
          "in" : "query",
          "description" : "Customer organization id, this field takes precedence over X-AUTH-ORG-ID",
          "required" : false,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved associated Root Organization status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RootOrgEnabledResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/associatedAccounts" : {
      "post" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve Billing Account Associations",
        "description" : "```SVC```\n\nThe API retrieves the Billing Account Associations based on the ancestor flag. If true, BA associations are fetched for a set of project id's based on the ancestor hierarchy. If false, the associations are fetched based on the given set of project id's\n",
        "operationId" : "getAssociatedAccountsByProjectIds",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ancestors",
          "in" : "query",
          "description" : "whether to include associations from it's ancestors",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO standard 2 letter country code",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        }, {
          "name" : "metroCode",
          "in" : "query",
          "description" : "Metro Code",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        }, {
          "name" : "ibxCode",
          "in" : "query",
          "description" : "Operational Unit Ibx Code",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        }, {
          "name" : "globalAccountType",
          "in" : "query",
          "description" : "Search for Global , Regional or All Accounts",
          "required" : false,
          "schema" : {
            "enum" : [ "NON_GLOBAL", "GLOBAL", "ALL" ],
            "default" : "NON_GLOBAL"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AssociatedBillingAccountsRequest"
        },
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all Billing Account association details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssociatedBillingAccountsResponse"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/customerOrganization/{custOrgId}" : {
      "put" : {
        "tags" : [ "Organization" ],
        "summary" : "To update customer organization CRH Enabled Flag",
        "description" : "```JWT```\n",
        "operationId" : "updateCustOrgCrhEnabledStatus",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "custOrgId",
          "in" : "path",
          "description" : "Customer organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status indicating, whether customer organization is enabled or  not",
          "example" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/customerOrganization/{custOrgId}/productToggle" : {
      "get" : {
        "tags" : [ "Product Toggle" ],
        "summary" : "To retrieve all products under the given app",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getCustomerProductToggle",
        "parameters" : [ {
          "name" : "custOrgId",
          "in" : "path",
          "description" : "Customer Organization Id",
          "required" : true,
          "example" : "7033",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all customer level product toggle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductToggleResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "You are not authorized to view the resource"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "Resource not found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Product Toggle" ],
        "summary" : "To Enable a product toggling for a customer organization Id",
        "description" : "```JWT``` ```SVC```\n",
        "parameters" : [ {
          "name" : "custOrgId",
          "in" : "path",
          "description" : "Customer Organization Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "name" : "isNetNewCustomerFlag",
          "in" : "query",
          "description" : "Net New Customer Flag this will internally enable the custOrg in to CRH Experience",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "style" : "form"
        }, {
          "name" : "isCrhEnabledRequested",
          "in" : "query",
          "description" : "Explicit flag to enable the custOrg in to CRH Experience, future usecase",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/productToggleRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Product toggle request is accepted by the system",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "operationId" : "Organizationproducttoggle"
      }
    },
    "/resourceManager/v1/{custOrgId}/inbox" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve inbox project resource",
        "description" : "```JWT```\n",
        "operationId" : "getInboxProjectByCustOrgId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "custOrgId",
          "in" : "path",
          "description" : "Customer Organization Id",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved inbox project resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/projects/{projectId}/permittedParent" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve the permitted parents of an asset by projectId",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getPermittedParentByProjectId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved permitted parents of asset by projectId",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/customerOrganizations/associations" : {
      "post" : {
        "tags" : [ "CustomerOrganization" ],
        "summary" : "Persist customer organization data that can be associated",
        "description" : "```JWT``` ```SVC```\n\nThe API persists the association data, which can be associated by user\n",
        "operationId" : "saveCustOrgToBeAssociated",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CustOrgToBeAssociatedRequest"
        },
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved an existing customer organization that can be associated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustOrgToBeAssociatedResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successfully saved customer organization that can be associated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustOrgToBeAssociatedResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "get" : {
        "tags" : [ "CustomerOrganization" ],
        "summary" : "Retrieve customer organizations details which can be associated - based on request criteria",
        "description" : "```JWT``` ```SVC```\n\nThe API to retrieve customer organization details which can be associated\n",
        "operationId" : "getAllCustOrgToBeAssociated",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reseller",
          "in" : "query",
          "description" : "fetch reseller organizations or not",
          "required" : false,
          "example" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "subCustomer",
          "in" : "query",
          "description" : "fetch subcustomer organizations or not",
          "required" : false,
          "example" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "statuses",
          "in" : "query",
          "description" : "customer organization statuses to fetch",
          "required" : false,
          "example" : "AVAILABLE_TO_ASSOCIATE",
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "array",
            "default" : "AVAILABLE_TO_ASSOCIATE",
            "items" : {
              "$ref" : "#/components/schemas/CustOrgAssociationStatus"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all association details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustOrgToBeAssociatedResponsePagination"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/customerOrganizations/{customerOrganizationId}/associations" : {
      "get" : {
        "tags" : [ "CustomerOrganization" ],
        "summary" : "Retrieve customer organization details which can be associated",
        "description" : "```JWT``` ```SVC```\n\nThe API to retrieve customer organization details which can be associated\n",
        "operationId" : "getCustOrgToBeAssociated",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrganizationId",
          "in" : "path",
          "description" : "Customer organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved to be associated details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustOrgToBeAssociatedResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "CustomerOrganization" ],
        "summary" : "Update customer organization association status",
        "description" : "```JWT``` ```SVC```\n\nThe API to update customer organization association status\n",
        "operationId" : "updateCustOrgToBeAssociatedStatus",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrganizationId",
          "in" : "path",
          "description" : "Customer organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "customer organization status to update",
          "required" : true,
          "example" : "ASSOCIATE_IN_PROGRESS",
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "array",
            "default" : "ASSOCIATE_IN_PROGRESS",
            "items" : {
              "$ref" : "#/components/schemas/CustOrgAssociationStatus"
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "CustomerOrganization" ],
        "summary" : "To delete customer organization details available for association",
        "description" : "```JWT``` ```SVC```\n\nThe API to delete customer organization details available for association\n",
        "operationId" : "deleteCustOrgToBeAssociated",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrganizationId",
          "in" : "path",
          "description" : "Customer organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/i1/organizations/{orgId}/meta" : {
      "patch" : {
        "tags" : [ "Organization" ],
        "summary" : "Update meta attribute of an organization",
        "description" : "```SVC```\n",
        "operationId" : "patchOrganizationMeta",
        "parameters" : [ {
          "in" : "path",
          "name" : "orgId",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "CRH Resource Id of the organization to patch the meta attribute"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/resourceMetaUpdateRequest"
        },
        "responses" : {
          "200" : {
            "description" : "Successfully saved customer organization that can be associated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceMetaUpdateResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/i1/organizations/hierarchy" : {
      "patch" : {
        "tags" : [ "Organization" ],
        "summary" : "To update an list of organizations - based on requestType",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "updateOrganizationsSubTypeByOperation",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "requestType",
          "in" : "query",
          "description" : "Request type representing the update operation",
          "required" : true,
          "allowEmptyValue" : false,
          "example" : "UPDATE_RESOURCES_SUBTYPES",
          "schema" : {
            "type" : "string",
            "enum" : [ "UPDATE_RESOURCES_SUBTYPES" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/orgSubTypeUpdateRequest"
                }
              }
            }
          },
          "description" : "Request payload to update the organization",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/i1/organizations/{organizationId}/hierarchy" : {
      "patch" : {
        "tags" : [ "Organization" ],
        "summary" : "To update an organization - based on requestType",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "updateOrganizationByOperation",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "111234234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "requestType",
          "in" : "query",
          "description" : "Request type representing the update operation",
          "required" : true,
          "allowEmptyValue" : false,
          "example" : "UPDATE_RESOURCE_SUBTYPE",
          "schema" : {
            "type" : "string",
            "enum" : [ "UPDATE_RESOURCE_SUBTYPE" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/updateOrganizationSubTypeRequest"
              }
            }
          },
          "description" : "Request payload to update the organization",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations" : {
      "post" : {
        "tags" : [ "Organization" ],
        "summary" : "To create new organization",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "saveOrganization",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-ROOT-ORG",
          "in" : "header",
          "description" : "Root Organization resource ID (Optional, while creating a topmost parent organization. Required, for all other scenarios)",
          "required" : false,
          "example" : "11123412123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/createOrganizationRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "schema" : {
                "$ref" : "#/components/headers/location"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve all Organizations by input criteria",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getAllOrganizations",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all Organizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrganizationResponse"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations/merge" : {
      "post" : {
        "tags" : [ "Organization" ],
        "summary" : "To validate merge organization",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "mergeOrganizations",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "To re-trigger the merge operations based on persisted correlationId",
          "required" : false,
          "example" : "REFRESH",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/organizationMergeRequest"
        },
        "responses" : {
          "202" : {
            "description" : "Successfully initiated the org merge operation",
            "headers" : {
              "schema" : {
                "$ref" : "#/components/headers/organizationMergeLocation"
              }
            }
          },
          "208" : {
            "description" : "Org merge already completed for input correlationId",
            "headers" : {
              "schema" : {
                "$ref" : "#/components/headers/organizationMergeLocation"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations/merge/status" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To populate the organizations merge statuses by input requestId list",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "mergeOrganizationsStatus",
        "parameters" : [ {
          "name" : "requestId",
          "in" : "query",
          "description" : "List of request ids (comma separated)",
          "required" : true,
          "example" : [ "9cd7d6-075ee3-5c6b4e-ccdcfd-79e5f75a", "9cd7d6-075ee3-5c6b4e-ccdcfd-79e5f75b" ],
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationMergeStatusPagination"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations/merge/validate" : {
      "post" : {
        "tags" : [ "Organization" ],
        "summary" : "To validate merge organization",
        "description" : "```SVC```\n",
        "operationId" : "validateMergeOrganization",
        "parameters" : [ {
          "name" : "source",
          "in" : "query",
          "description" : "source of caller",
          "required" : false,
          "example" : "PDS",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/organizationMergeRequest"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organizationMergeResponse"
                },
                "examples" : {
                  "Example 1" : {
                    "value" : {
                      "success" : false,
                      "errors" : [ {
                        "errorCode" : "EQ-3004502",
                        "errorMessage" : "Validation error",
                        "details" : "Property validation error",
                        "correlationId" : "c1ce77f3-78ae-8f87-4a33-f4e5ec77a6a1",
                        "additionalInfo" : [ {
                          "errorCode" : "ORG_DOES_NOT_EXIST",
                          "errorMessage" : "Requested Organization does not exist"
                        } ]
                      } ]
                    }
                  },
                  "Example 2" : {
                    "value" : {
                      "success" : true
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations/{organizationId}" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve organization details by ID",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getOrganizationByOrganizationId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "level",
          "in" : "query",
          "description" : "Number of sub level details required for this organization. <br/> level = 1, then child details would be retrieved.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 1,
            "example" : 0
          }
        }, {
          "name" : "additionalFields",
          "in" : "query",
          "description" : "Additional fields in response",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "enum" : [ "deleteAllowed" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved organization details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Organization" ],
        "summary" : "To update an organization",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "updateOrganizationByOrganizationId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "111234234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/updateOrganizationRequest"
              }
            }
          },
          "description" : "Request to update organization",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Organization" ],
        "summary" : "To delete an organization",
        "description" : "```JWT``` ```SVC```\n\nTo delete an organization. The organization cannot be deleted if there are sub-customers or resources underneath.\n",
        "operationId" : "deleteOrganizationByOrganizationId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Id of the organization to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted organization"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations/{crhOrganizationId}/accounts/{accountNumber}" : {
      "delete" : {
        "tags" : [ "Organization" ],
        "summary" : "To delete account number from organization or delete the organization as well if supplied account number is the only available account number attached to the organization",
        "description" : "```JWT``` ```SVC```\n\nTo delete an organization. The organization cannot be deleted if there are sub-customers or resources underneath.\n",
        "operationId" : "deleteAccountOrOrganizationByAccountNumber",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "crhOrganizationId",
          "in" : "path",
          "description" : "CRH Organization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountNumber",
          "in" : "path",
          "description" : "Account number to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Successfully deleted the resource"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations/{organizationId}/associations" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve all billing account associations of an organization",
        "description" : "```JWT``` ```SVC```\n\nRetrieves the available billing account associations for the given organization.\n",
        "operationId" : "getOrganizationAssociationsWithBillingAccount",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ancestors",
          "in" : "query",
          "description" : "whether to retrieve inherited billing account details, which are associated on its parent hierarchy",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO standard 2 letter country code",
          "required" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        }, {
          "name" : "metroCode",
          "in" : "query",
          "description" : "Metro code",
          "required" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved association details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResourceBillingAccountsAssociationResponse"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Organization" ],
        "summary" : "To associate the organization with billing account",
        "description" : "```JWT``` ```SVC```\n\nTo associate the organization with billing account. Every billing account belongs to one country and the only one billing from a country can be made default. When there are no default billing accounts for an organization then the first billing is defaulted for selection.\n",
        "operationId" : "associateOrganizationWithBillingAccount",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ResourceBillingAccountsAssociationRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Associated"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/resourceManager/v1/organizations/{organizationId}/associations/{billingAccountId}" : {
      "delete" : {
        "tags" : [ "Organization" ],
        "summary" : "To de-associate the organization with billing account",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "disAssociateOrganizationFromBillingAccount",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/billingAccountId"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully de-associated"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "Organization" ],
        "summary" : "To update the association of an organization with billing account",
        "description" : "```JWT``` ```SVC```\n\nTo update the association of an organization with billing account in terms of updating the default selection as the billing account. When the defaultAccount query parameter is not pass then we consider it as false. When the billing account is taken off as default selection then one of the other billing accounts will be converted to default based on order(latest created).\n",
        "operationId" : "updateAssociationOfOrganizationWithBillingAccount",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "description" : "Organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/billingAccountId"
        }, {
          "$ref" : "#/components/parameters/defaultAccount"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully updated the association"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/resourceManager/v1/projects" : {
      "post" : {
        "tags" : [ "Project" ],
        "summary" : "To create new Project",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "saveProject",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/createProjectRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Successfully created the project"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve all Projects of a root organization",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getAllProjects",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all Projects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectResponse"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/projects/{projectId}" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve Project details by id",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getProjectByProjectId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project Id Information",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "numberOfLevels",
          "in" : "query",
          "description" : "Number of levels",
          "required" : false,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "additionalFields",
          "in" : "query",
          "description" : "Additional fields in response",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "enum" : [ "deleteAllowed" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved Project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Project" ],
        "summary" : "To update the project",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "updateProjectByProjectId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/updateProjectRequest"
        },
        "responses" : {
          "204" : {
            "description" : "Successfully updated the project details"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Project" ],
        "summary" : "To delete a project",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "deleteProjectByProjectId",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted project"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/projects/{projectId}/ancestors" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To get all the ancestors in the customer resource hierarchy from project id till root organization of the hierarchy",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getAncestorsByProjectId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the parent organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectAncestorHierarchyResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/projects/{projectId}/associations" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve all billing account associations of a project",
        "description" : "```JWT``` ```SVC```\n\nRetrieves the available billing account associations for the given project's hierarchy.\n",
        "operationId" : "getProjectAssociationsWithBillingAccount",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ancestors",
          "in" : "query",
          "description" : "whether to retrieve inherited billing account details, which are associated on its parent hierarchy",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO standard 2 letter country code",
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        }, {
          "name" : "metroCode",
          "in" : "query",
          "description" : "Metro Code",
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        }, {
          "name" : "ibxCode",
          "in" : "query",
          "description" : "Operational Unit Ibx Code",
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved association details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResourceBillingAccountsAssociationResponse"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Project" ],
        "summary" : "To associate the project with billing account",
        "description" : "```JWT``` ```SVC```\n\nTo associate the project with billing account. Every billing account belongs to one country and the only one billing from a country can be made default. When there are no default billing accounts for a project then the first billing is defaulted for selection.\n",
        "operationId" : "associateProjectWithBillingAccount",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ResourceBillingAccountsAssociationRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/resourceManager/v1/projects/{projectId}/associations/{billingAccountId}" : {
      "delete" : {
        "tags" : [ "Project" ],
        "summary" : "To de-associate the project with billing account",
        "description" : "```JWT``` ```SVC```\n\nTo de-associate the project with billing account. When a default billing account gets de-associated then one of the other billing accounts will be converted to default based on order(latest created)\n",
        "operationId" : "disAssociateProjectWithBillingAccount",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/billingAccountId"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully de-associated"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "tags" : [ "Project" ],
        "summary" : "To update the association of a project with billing account",
        "description" : "```JWT``` ```SVC```\n\nTo update the association of a project with billing account in terms of updating the default selection as the billing account. When defaultAccount query parameter is not pass then we consider it as false. When the billing account is taken off as default selection then one of the other billing accounts will be converted to default based on order(latest created).\n",
        "operationId" : "updateProjectAssociationWithBillingAccount",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/billingAccountId"
        }, {
          "$ref" : "#/components/parameters/defaultAccount"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/resourceManager/v1/projects/movements" : {
      "patch" : {
        "tags" : [ "Project" ],
        "summary" : "To activate the internal movement of a project",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "projectMovement",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/MovementRequest"
        },
        "responses" : {
          "204" : {
            "description" : "Successfully moved project"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/projects/{projectId}/parent" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve permitted parent given a project Id",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getParentByProjectId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrganizationResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/projects/{resellerId}/reseller" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve the list of ACTIVE end customer projects by reseller Id",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getEndCustProjectsByResellerId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resellerId",
          "in" : "path",
          "description" : "Reseller Id",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "description" : "Asset's Account Id",
          "required" : false,
          "example" : "123,234,345",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved end customer projects by reseller Id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EndCustProjectResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations/userResourceHierarchy" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve the user resource hierarchy",
        "description" : "```JWT```\n",
        "operationId" : "getUserResourceHierarchy",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetsRequired",
          "in" : "query",
          "description" : "Assets Required or not",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "inboxOption",
          "in" : "query",
          "description" : "Whether to include / exclude inbox resource information in the response or not. <br/> If the options is EXCLUDE (default), then response will have not have inbox resource information. <br/> If the options is INCLUDE, then response will have inbox resource information also. <br/> If the options is ONLY, then response will have inbox resource information only.",
          "allowEmptyValue" : true,
          "schema" : {
            "$ref" : "#/components/schemas/InboxOption"
          },
          "required" : false,
          "example" : "EXCLUDE"
        }, {
          "name" : "statusIn",
          "in" : "query",
          "description" : "Organization / Project status (Comma separated) - to filter the organization, projects by status. <br/> LOCKED status represents the organization/project under going merge process.",
          "required" : false,
          "example" : "ACTIVE,LOCKED",
          "schema" : {
            "type" : "string",
            "default" : "ACTIVE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved user resource hierarchy",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CrhResourceTree"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations/movements" : {
      "patch" : {
        "tags" : [ "Organization" ],
        "summary" : "To activate the internal movement of an organization",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "organizationMovement",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/MovementRequest"
        },
        "responses" : {
          "204" : {
            "description" : "Successfully initiated the the movement of an organization"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations/{organizationId}/parent" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve permitted parent given an organization Id",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getParentByOrganizationId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "organizationId",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrganizationResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/customerOrganizations/{customerOrganizationId}/mappings" : {
      "get" : {
        "tags" : [ "CustomerOrganization" ],
        "summary" : "Retrieve customer organization migration mapping details",
        "description" : "```JWT``` ```SVC```\n\nThe API to retrieve customer organization migration mapping details\n",
        "operationId" : "getCustOrgMapping",
        "parameters" : [ {
          "name" : "customerOrganizationId",
          "in" : "path",
          "description" : "Customer organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved mapping details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustOrgMappingResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "CustomerOrganization" ],
        "summary" : "Update customer organization migration mapping details",
        "description" : "```JWT``` ```SVC```\n\nThe API to update customer organization migration mapping details. >br /> As of now, user can update 'resource destination hierarchy' value.\n",
        "operationId" : "updateCustOrgMapping",
        "parameters" : [ {
          "name" : "customerOrganizationId",
          "in" : "path",
          "description" : "Customer organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCustOrgMappingRequest"
        },
        "responses" : {
          "204" : {
            "description" : "Successfully updated"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/customerOrganizations/associate" : {
      "post" : {
        "tags" : [ "CustomerOrganization" ],
        "summary" : "Associates end customer organization with reseller",
        "description" : "```JWT``` ```SVC```\n\nThe API to associate end customer organization with reseller\n",
        "operationId" : "associateEndCustomerOrg",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/OnboardCustOrgAsAssociateRequest"
        },
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/projects/assetPermissions" : {
      "get" : {
        "summary" : "To retrieve asset permissions for project",
        "description" : "```JWT``` ```SVC```\n",
        "tags" : [ "Project" ],
        "operationId" : "getAssetPermissions",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the asset permissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetPermission"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resourceManager/v1/projects/moveAssets" : {
      "put" : {
        "summary" : "To move assets from source to destination project",
        "description" : "```JWT``` ```SVC```\n",
        "tags" : [ "Project" ],
        "operationId" : "moveAssetsFromSourceToDestinationProject",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ProjectAssetsMoveRequest"
        },
        "responses" : {
          "200" : {
            "description" : "Successfully moved the project assets"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resourceManager/v1/metalOrganizations/migrate" : {
      "post" : {
        "tags" : [ "Metal" ],
        "summary" : "To migrate existing metal organization",
        "description" : "```SVC```\n This API allows a system to migrate existing metal Organizations into CRH with preexisting organizationId. The organizationId & organizationName are mandatory and rest of the attributes are optional however meta.source provides a option to trace the originating system\n",
        "operationId" : "saveBulkMetalOrganizations",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MetalOrganizationMigrateRequest"
                }
              },
              "examples" : {
                "Example 1" : {
                  "value" : [ {
                    "organizationId" : "878bde9e-e780-4bb2-bf26-122edaf4a15f",
                    "organizationName" : "Root Org",
                    "meta" : {
                      "source" : [ "Metal" ],
                      "ownerId" : "88786af4-5ce3-49d1-88a7-842fc69c1233"
                    },
                    "status" : "ACTIVE"
                  }, {
                    "organizationId" : "eac93957-2a01-4dcf-94fa-6b4cac19fb7c",
                    "organizationName" : "Sub Org",
                    "meta" : {
                      "source" : [ "Metal" ],
                      "ownerId" : "88786af4-5ce3-49d1-88a7-842fc69c1233"
                    },
                    "status" : "DELETED"
                  } ]
                },
                "Example 2" : {
                  "value" : [ {
                    "organizationId" : "878bde9e-e780-4bb2-bf26-122edaf4a15f",
                    "organizationName" : "Root Org",
                    "meta" : {
                      "source" : [ "Metal" ],
                      "ownerId" : "88786af4-5ce3-49d1-88a7-842fc69c1233"
                    }
                  }, {
                    "organizationId" : "eac93957-2a01-4dcf-94fa-6b4cac19fb7c",
                    "organizationName" : "Sub Org",
                    "meta" : {
                      "source" : [ "Metal" ],
                      "ownerId" : "88786af4-5ce3-49d1-88a7-842fc69c1233"
                    }
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MetalOrganizationMigrateResponse"
                  }
                },
                "examples" : {
                  "Example" : {
                    "value" : [ {
                      "resourceId" : "88786af4-5ce3-49d1-88a7-842fc69c1233",
                      "success" : true
                    }, {
                      "resourceId" : "eac93957-2a01-4dcf-94fa-6b4cac19fb7c",
                      "success" : true
                    } ]
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Multi Status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MetalOrganizationMigrateResponse"
                  }
                },
                "examples" : {
                  "Example" : {
                    "value" : [ {
                      "resourceId" : "88786af4-5ce3-49d1-88a7-842fc69c1233",
                      "success" : true
                    }, {
                      "resourceId" : "eac93957-2a01-4dcf-94fa-6b4cac19fb7c",
                      "success" : false
                    } ]
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/metalOrganizations" : {
      "post" : {
        "tags" : [ "Metal" ],
        "summary" : "To create new organization",
        "description" : "```SVC```\n This API allows a system to create Organizations in CRH with preexisting organizationId. The organizationId & organizationName are mandatory and rest of the attributes are optional however meta.source provides a option to trace the originating system\n",
        "operationId" : "saveMetalOrganization",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MetalOrganizationRequest"
              },
              "examples" : {
                "Example 1" : {
                  "value" : {
                    "organizationId" : "878bde9e-e780-4bb2-bf26-122edaf4a15f",
                    "organizationName" : "Root Org",
                    "meta" : {
                      "source" : [ "Metal" ],
                      "ownerId" : "88786af4-5ce3-49d1-88a7-842fc69c1233"
                    }
                  }
                },
                "Example 2" : {
                  "value" : {
                    "organizationId" : "eac93957-2a01-4dcf-94fa-6b4cac19fb7c",
                    "organizationName" : "Sub Org",
                    "meta" : {
                      "source" : [ "Metal" ],
                      "ownerId" : "88786af4-5ce3-49d1-88a7-842fc69c1233"
                    }
                  }
                },
                "Example 3" : {
                  "value" : {
                    "organizationId" : "eac93957-2a01-4dcf-94fa-6b4cac19fb7c",
                    "organizationName" : "Sub Org",
                    "parentOrganizationId" : "f05c1921-228e-41aa-bac4-fc375df6b37d",
                    "meta" : {
                      "source" : [ "Metal" ],
                      "ownerId" : "5193b450-ae6c-4ccf-9b08-6f90cf4de326"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "schema" : {
                "$ref" : "#/components/headers/location"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/metalOrganizations/{organizationId}" : {
      "put" : {
        "tags" : [ "Metal" ],
        "summary" : "To update an organization",
        "description" : "```SVC```\nThis API allows a system to Update organization name in CRH by organizationId\n",
        "operationId" : "updateMetalOrganizationByOrganizationId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "111234234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMetalOrganizationRequest"
              },
              "examples" : {
                "Example 1" : {
                  "value" : {
                    "organizationName" : "Updated Org Name",
                    "meta" : {
                      "source" : [ "Metal" ],
                      "ownerId" : "5193b450-ae6c-4ccf-9b08-6f90cf4de326"
                    }
                  }
                },
                "Example 2" : {
                  "value" : {
                    "organizationName" : "Updated Org Name"
                  }
                }
              }
            }
          },
          "description" : "Request to update organization",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Metal" ],
        "summary" : "To delete an organization",
        "description" : "```SVC```\nThe API allows System to delete an organization by organizationId.\n",
        "operationId" : "deleteMetalOrganizationByOrganizationId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Id of the organization to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted organization"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "get" : {
        "tags" : [ "Metal" ],
        "summary" : "To retrieve a Organization By Id",
        "description" : "```SVC```\nThis API allows a system to retrieve existing organization by Id in CRH\n",
        "operationId" : "getMetalOrganizationById",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization Id",
          "required" : true,
          "example" : "1231291orgId",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved organization details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetalOrganizationResponse"
                },
                "examples" : {
                  "Example 1" : {
                    "value" : {
                      "organizationId" : "878bde9e-e780-4bb2-bf26-122edaf4a15f",
                      "organizationName" : "Root Org",
                      "meta" : {
                        "source" : [ "Metal" ],
                        "ownerId" : "88786af4-5ce3-49d1-88a7-842fc69c1233"
                      }
                    }
                  },
                  "Example 2" : {
                    "value" : {
                      "organizationId" : "eac93957-2a01-4dcf-94fa-6b4cac19fb7c",
                      "organizationName" : "Sub Org",
                      "parentOrganizationId" : "f05c1921-228e-41aa-bac4-fc375df6b37d",
                      "meta" : {
                        "source" : [ "Metal" ],
                        "ownerId" : "88786af4-5ce3-49d1-88a7-842fc69c1233"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/metalProjects" : {
      "post" : {
        "tags" : [ "Metal" ],
        "summary" : "To create new Project",
        "description" : "```SVC```\nThis API allows a system to create a project in CRH with preexisting projectId. The projectId, projectName and parentOrganizationId are mandatory and rest of the attributes are option. However meta.source provides a option to trace the originating system\n",
        "operationId" : "saveMetalProject",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/createMetalProjectRequest"
              },
              "examples" : {
                "Example 1" : {
                  "value" : {
                    "projectId" : "878bde9e-e780-4bb2-bf26-122edaf4a15f",
                    "projectName" : "Project Name",
                    "parentOrganizationId" : "f05c1921-228e-41aa-bac4-fc375df6b37d",
                    "meta" : {
                      "source" : [ "Metal" ],
                      "ownerId" : "88786af4-5ce3-49d1-88a7-842fc69c1233"
                    }
                  }
                },
                "Example 2" : {
                  "value" : {
                    "projectId" : "eac93957-2a01-4dcf-94fa-6b4cac19fb7c",
                    "projectName" : "Sub Org",
                    "parentOrganizationId" : "f05c1921-228e-41aa-bac4-fc375df6b37d",
                    "meta" : {
                      "source" : [ "Metal" ],
                      "ownerId" : "88786af4-5ce3-49d1-88a7-842fc69c1233"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully created the project"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/resources/merge" : {
      "put" : {
        "tags" : [ "Resources" ],
        "summary" : "To Merge Resources",
        "description" : "```SVC```\n",
        "operationId" : "mergeResources",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/resourceMergeRequest"
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resourceManager/v1/organizations/{organizationId}/ownerships" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "To retrieve all billing account ownerships of a resource",
        "description" : "```JWT``` ```SVC```\n\nRetrieves the available billing account ownerships for the given resource's hierarchy.\n",
        "operationId" : "getResourceAccountsOwnership",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-ROOT-ORG",
          "in" : "header",
          "description" : "Root Organization resource ID (Optional, while creating a topmost parent organization. Required, for all other scenarios)",
          "required" : false,
          "example" : "11123412123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/limitParam"
        }, {
          "$ref" : "#/components/parameters/offsetParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved ownership details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "pagination" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Pagination"
                        }, {
                          "type" : "object",
                          "properties" : {
                            "previous" : {
                              "example" : "/resourceManager/v1/resources/12345/ownership?offset=0&limit=20"
                            },
                            "next" : {
                              "example" : "/resourceManager/v2/resources/12345/ownership?offset=10&limit=20"
                            }
                          }
                        } ]
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/ResourceBillingAccountsOwnershipResponse"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/metalProjects/{projectId}" : {
      "put" : {
        "tags" : [ "Metal" ],
        "summary" : "To update the project",
        "description" : "```SVC```\nThis API allows a system to update the project name in CRH by projectId\n",
        "operationId" : "updateMetalProjectByProjectId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/updateMetalProjectRequest"
              },
              "examples" : {
                "Example 1" : {
                  "value" : {
                    "projectName" : "Updated Project Name",
                    "meta" : {
                      "source" : [ "Metal" ],
                      "ownerId" : "5193b450-ae6c-4ccf-9b08-6f90cf4de326"
                    }
                  }
                },
                "Example 2" : {
                  "value" : {
                    "projectName" : "Updated Project Name"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Successfully updated the project details"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Metal" ],
        "summary" : "To delete a project",
        "description" : "```SVC```\nThis API allows a system to delete a existing project in CRH by projectId\n",
        "operationId" : "deleteMetalProjectByProjectId",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted project"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "get" : {
        "tags" : [ "Metal" ],
        "summary" : "To retrieve a Project By Id",
        "description" : "```SVC```\nThis API allows a system to get the project in CRH by projectId\n",
        "operationId" : "getMetalProjectById",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project Id",
          "required" : true,
          "example" : "1231291orgId",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved project details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/metalProjectResponse"
                },
                "examples" : {
                  "Example 1" : {
                    "value" : {
                      "projectId" : "878bde9e-e780-4bb2-bf26-122edaf4a15f",
                      "projectName" : "Project Name",
                      "parentOrganizationId" : "f05c1921-228e-41aa-bac4-fc375df6b37d",
                      "parentOrganizationName" : "Organization Name",
                      "meta" : {
                        "source" : [ "Metal" ],
                        "ownerId" : "88786af4-5ce3-49d1-88a7-842fc69c1233"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations/{resourceId}/hierarchy" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve organization hierarchy by resource id",
        "description" : "```SVC```\n",
        "operationId" : "getResourceHierarchy",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "Resource Id",
          "required" : true,
          "example" : "111234234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The data items would be fetched from the user input offset point",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20,
            "minimum" : 1,
            "maximum" : 100,
            "example" : 50
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Max number of data items that can be fetched in current request",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 0,
            "minimum" : 1,
            "example" : 0
          }
        }, {
          "name" : "includeInbox",
          "in" : "query",
          "description" : "Include inbox resources in response",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "additionalFields",
          "in" : "query",
          "description" : "Additional fields in response, deleteAllowed (applicable to requested resource id only) to check if requested organization allow to delete, endCustomerRootOrgIds to retrieve end customer root org ids under reseller org.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "enum" : [ "deleteAllowed", "endCustomerRootOrgIds" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved organization details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedHierarchyResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/subCustRootOrg/movements" : {
      "patch" : {
        "tags" : [ "Organization" ],
        "summary" : "To activate the internal movement of an end customer organization",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "organizationMovement1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/MovementRequest"
        },
        "responses" : {
          "204" : {
            "description" : "Successfully initiated the the movement of an end customer organization"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/rootOrganization" : {
      "post" : {
        "tags" : [ "Root Organization" ],
        "summary" : "To create new root organization",
        "description" : "```SVC```\n",
        "operationId" : "createRootOrganization",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/createRootOrganizationRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "schema" : {
                "$ref" : "#/components/headers/createRootOrganizationLocation"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/createHierarchyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/company" : {
      "post" : {
        "tags" : [ "Company" ],
        "summary" : "To create new company",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "createCompany",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/createCompanyRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "schema" : {
                "$ref" : "#/components/headers/createCompanyLocation"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/createCompanyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resourceManager/v1/companies/{companyId}/address" : {
      "post" : {
        "tags" : [ "Company" ],
        "summary" : "To create new company address",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "saveTenantAddress",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "path",
          "description" : "Company Id",
          "example" : "63162563-0957-4839-89f3-12125edf38de",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/createCompanyAddressRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "schema" : {
                "$ref" : "#/components/headers/createCompanyAddressLocation"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/createCompanyAddressResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/companies/{companyId}/addresses" : {
      "get" : {
        "tags" : [ "Company" ],
        "summary" : "To get Company addresses",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getCompanyAddress",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "path",
          "description" : "Company Id",
          "example" : "63162563-0957-4839-89f3-12125edf38de",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the data items would be fetched from the user input offset point",
          "example" : 20,
          "schema" : {
            "type" : "integer",
            "default" : 0
          },
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "max number of data items that can be fetched in current request",
          "example" : 20,
          "schema" : {
            "type" : "integer",
            "default" : 20
          },
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved address details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "pagination" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Pagination"
                        }, {
                          "type" : "object",
                          "properties" : {
                            "previous" : {
                              "example" : "/resourceManager/v1/companies/bd817f15-4356-4b9a-993d-54d4f743342f/addresses?offset=0&limit=20"
                            },
                            "next" : {
                              "example" : "/resourceManager/v1/companies/bd817f15-4356-4b9a-993d-54d4f743342f/addresses?offset=40&limit=20"
                            }
                          }
                        } ]
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/companyAddressResponse"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/organizations/parent" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve permitted resource and parent's information, presented as a map of the requested list of resource ids",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getResourceAndParentInfoMapByResourceIds",
        "parameters" : [ {
          "name" : "resourceIds",
          "in" : "query",
          "description" : "Array of resource IDs of resource to get parent of",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "69dfabd6-e427-434d-aa80-9ad3e54418a3", "36c0959d-2293-4f3b-90fa-196f39491ac7", "e14f70f8-3f49-422e-a45f-efcec771d968" ],
            "maxItems" : 20
          },
          "explode" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved permitted resource and parent map",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/ResourceAndParentResponse"
                  }
                },
                "example" : {
                  "69dfabd6-e427-434d-aa80-9ad3e54418a3" : null,
                  "e14f70f8-3f49-422e-a45f-efcec771d968" : "{ \"resourceId\": \"e14f70f8-3f49-422e-a45f-efcec771d968\", \"resourceName\": \"Big Mac Research LLC\", \"resourceType\": \"ORG\", }",
                  "36c0959d-2293-4f3b-90fa-196f39491ac7" : "{ \"resourceId\": \"36c0959d-2293-4f3b-90fa-196f39491ac7\", \"resourceName\": \"Project Rebranding\", \"resourceType\": \"PROJECT\", \"resourceSubType\": \"RESELLER\", \"parent\": { \"resourceId\": \"852df988-3925-4835-8c00-9bf96b7c391e\", \"resourceName\": \"Fries Department\", \"resourceType\": \"ORG\" \"resourceSubType\": \"RESELLER\", } }"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/{resourceId}/subscription" : {
      "post" : {
        "tags" : [ "Subscription" ],
        "summary" : "To create active subscription key with root org id",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "createSubscription",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "First level resource id which subscription key will be created with",
          "required" : true,
          "schema" : {
            "type" : "string",
            "items" : {
              "type" : "string"
            },
            "example" : "e14f70f8-3f49-422e-a45f-efcec771d968"
          },
          "explode" : false
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/createSubscriptionRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Successfully created subscription key"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/{resourceId}/subscriptions/{subscriptionId}" : {
      "get" : {
        "tags" : [ "Subscription" ],
        "summary" : "To retrieve subscription key details using resource id and subscription key",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getSubscriptionById",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "Resource id of project / org",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "69dfabd6-e427-434d-aa80-9ad3e54418a3"
          },
          "explode" : false
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription key to be check",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "b70c951e-e6bb-48f6-ae23-6afa15347267"
          },
          "explode" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved subscription key details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SubscriptionResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Subscription" ],
        "summary" : "To delete subscription key using resource id and subscription key",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "deleteSubscription",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "Resource id of project / org",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "69dfabd6-e427-434d-aa80-9ad3e54418a3"
          },
          "explode" : false
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription key to be check",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "b70c951e-e6bb-48f6-ae23-6afa15347267"
          },
          "explode" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully delete subscription key details"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/{resourceId}/subscriptions" : {
      "get" : {
        "tags" : [ "Subscription" ],
        "summary" : "To retrieve list of subscriptions by search of org / project id.",
        "description" : "```JWT```\n",
        "operationId" : "getSubscriptionsByResourceIds",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "Resource id of project / org",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "69dfabd6-e427-434d-aa80-9ad3e54418a3"
          },
          "explode" : false
        }, {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeStatus",
          "in" : "query",
          "description" : "Search subscription keys based on status",
          "required" : false,
          "example" : "ALL, ACTIVE, DELETED",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The data items would be fetched from the user input offset point",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 0,
            "maximum" : 1,
            "example" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "max number of data items that can be fetched in current request",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20,
            "minimum" : 1,
            "example" : 1
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved subscription keys",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSubscriptionsByResourceIdPagination"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v1/subscriptions" : {
      "get" : {
        "tags" : [ "Subscription" ],
        "summary" : "To retrieve list of subscriptions available for the user",
        "description" : "```JWT```\n",
        "operationId" : "getUserSubscriptions",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The data items would be fetched from the user input offset point",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 0,
            "maximum" : 1,
            "example" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "max number of data items that can be fetched in current request",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20,
            "minimum" : 1,
            "example" : 1
          }
        }, {
          "name" : "resourceType",
          "in" : "query",
          "description" : "Requested Resource Type",
          "schema" : {
            "type" : "string",
            "enum" : [ "ORG", "PROJECT" ],
            "default" : "PROJECT"
          },
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved subscription keys",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetUserSubscriptionsPagination"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/organizations" : {
      "post" : {
        "tags" : [ "Organization" ],
        "summary" : "To create new organization",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "saveOrganization1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-ROOT-ORG",
          "in" : "header",
          "description" : "Root Organization resource ID (Optional, while creating a topmost parent organization. Required, for all other scenarios)",
          "required" : false,
          "example" : "11123412123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/createOrganizationRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "schema" : {
                "$ref" : "#/components/headers/location"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/organizations/{organizationId}" : {
      "put" : {
        "tags" : [ "Organization" ],
        "summary" : "To update an organization",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "updateOrganizationByOrganizationId1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "111234234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/updateOrganizationRequest"
              }
            }
          },
          "description" : "Request to update organization",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Organization" ],
        "summary" : "To delete an organization",
        "description" : "```JWT``` ```SVC```\n\nTo delete an organization. The organization cannot be deleted if there are sub-customers or resources underneath.\n",
        "operationId" : "deleteOrganizationByOrganizationId1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Id of the organization to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted organization"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/organizations/{organizationId}/associations" : {
      "post" : {
        "tags" : [ "Organization" ],
        "summary" : "To associate the organization with billing account",
        "description" : "```JWT``` ```SVC```\n\nTo associate the organization with billing account. Every billing account belongs to one country and the only one billing from a country can be made default. When there are no default billing accounts for an organization then the first billing is defaulted for selection.\n",
        "operationId" : "associateOrganizationWithBillingAccount1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ResourceBillingAccountsAssociationRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Associated"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve all billing account associations of an organization",
        "description" : "```JWT``` ```SVC```\n\nRetrieves the available billing account associations for the given organization.\n",
        "operationId" : "getOrganizationAssociationsWithBillingAccount1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ancestors",
          "in" : "query",
          "description" : "whether to retrieve inherited billing account details, which are associated on its parent hierarchy",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO standard 2 letter country code",
          "required" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        }, {
          "name" : "metroCode",
          "in" : "query",
          "description" : "Metro code",
          "required" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        }, {
          "name" : "globalAccountType",
          "in" : "query",
          "description" : "Search for Global , Regional or All Accounts",
          "required" : false,
          "schema" : {
            "enum" : [ "NON_GLOBAL", "GLOBAL", "ALL" ],
            "default" : "NON_GLOBAL"
          }
        }, {
          "name" : "orgStatuses",
          "in" : "query",
          "description" : "Retrieve billing account associations for the given Organization by Organization Status",
          "required" : false,
          "schema" : {
            "enum" : [ "ACTIVE", "LOCKED" ],
            "default" : "ACTIVE"
          }
        }, {
          "$ref" : "#/components/parameters/limitParam"
        }, {
          "$ref" : "#/components/parameters/offsetParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved association details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "pagination" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Pagination"
                        }, {
                          "type" : "object",
                          "properties" : {
                            "previous" : {
                              "example" : "/resourceManager/v2/organizations/12345/associations?offset=0&limit=20"
                            },
                            "next" : {
                              "example" : "/resourceManager/v2/organizations/12345/associations?offset=10&limit=20"
                            }
                          }
                        } ]
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/ResourceBillingAccountsAssociationResponse"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/organizations/{organizationId}/associations/{billingAccountId}" : {
      "delete" : {
        "tags" : [ "Organization" ],
        "summary" : "To de-associate the organization with billing account",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "disAssociateOrganizationFromBillingAccount1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/billingAccountId"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully de-associated"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/resourceManager/v2/projects" : {
      "post" : {
        "tags" : [ "Project" ],
        "summary" : "To create new Project",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "saveProject1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/createProjectRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Successfully created the project"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve Projects of a root organization",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getAllProjects1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includePermissions",
          "in" : "query",
          "description" : "Whether to include the permissions on project resource",
          "required" : false,
          "example" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeInbox",
          "in" : "query",
          "description" : "Whether to include the projects with inbox classification or not",
          "required" : false,
          "example" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "$ref" : "#/components/parameters/limitParam"
        }, {
          "$ref" : "#/components/parameters/offsetParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all Projects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "pagination" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Pagination"
                        }, {
                          "type" : "object",
                          "properties" : {
                            "previous" : {
                              "example" : "/resourceManager/v2/projects?offset=0&limit=20"
                            },
                            "next" : {
                              "example" : "/resourceManager/v2/projects?offset=10&limit=20"
                            }
                          }
                        } ]
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/ProjectV2Response"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/projects/{projectId}" : {
      "put" : {
        "tags" : [ "Project" ],
        "summary" : "To update the project",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "updateProjectByProjectId1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/updateProjectRequest"
        },
        "responses" : {
          "204" : {
            "description" : "Successfully updated the project details"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ConflictError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Project" ],
        "summary" : "To delete a project",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "deleteProjectByProjectId1",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted project"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve Project details by id",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getProjectByProjectIdV2",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project Id Information",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "additionalFields",
          "in" : "query",
          "description" : "Additional fields in response",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "enum" : [ "deleteAllowed" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved Project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/projects/{projectId}/associations" : {
      "post" : {
        "tags" : [ "Project" ],
        "summary" : "To associate the project with billing account",
        "description" : "```JWT``` ```SVC```\nTo associate the project with billing account. Every billing account belongs to one country and the only one billing from a country can be made default. When there are no default billing accounts for a project then the first billing is defaulted for selection.\n",
        "operationId" : "associateProjectWithBillingAccount1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ResourceBillingAccountsAssociationRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve all billing account associations of a project",
        "description" : "```JWT``` ```SVC```\n\nRetrieves the available billing account associations for the given project's hierarchy.\n",
        "operationId" : "getProjectAssociationsWithBillingAccount1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ancestors",
          "in" : "query",
          "description" : "whether to retrieve inherited billing account details, which are associated on its parent hierarchy",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO standard 2 letter country code",
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        }, {
          "name" : "metroCode",
          "in" : "query",
          "description" : "Metro Code",
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        }, {
          "name" : "ibxCode",
          "in" : "query",
          "description" : "Operational Unit Ibx Code",
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string",
            "example" : "SG"
          }
        }, {
          "name" : "globalAccountType",
          "in" : "query",
          "description" : "Search for Global , Regional or All Accounts",
          "required" : false,
          "schema" : {
            "enum" : [ "NON_GLOBAL", "GLOBAL", "ALL" ],
            "default" : "NON_GLOBAL"
          }
        }, {
          "name" : "projectStatuses",
          "in" : "query",
          "description" : "Retrieve billing account associations for a given Project by Project Status",
          "required" : false,
          "schema" : {
            "enum" : [ "ACTIVE", "LOCKED" ],
            "default" : "ACTIVE"
          }
        }, {
          "$ref" : "#/components/parameters/limitParam"
        }, {
          "$ref" : "#/components/parameters/offsetParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved association details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "pagination" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/Pagination"
                        }, {
                          "type" : "object",
                          "properties" : {
                            "previous" : {
                              "example" : "/resourceManager/v2/projects/12345/associations?offset=0&limit=20"
                            },
                            "next" : {
                              "example" : "/resourceManager/v2/projects/12345/associations?offset=10&limit=20"
                            }
                          }
                        } ]
                      }
                    }
                  }, {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/ResourceBillingAccountsAssociationResponse"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/projects/{projectId}/associations/{billingAccountId}" : {
      "delete" : {
        "tags" : [ "Project" ],
        "summary" : "To de-associate the project with billing account",
        "description" : "```JWT``` ```SVC```\n\nTo de-associate the project with billing account. When a default billing account gets de-associated then one of the other billing accounts will be converted to default based on order(latest created)\n",
        "operationId" : "disAssociateProjectWithBillingAccount1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project ID",
          "required" : true,
          "example" : "1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/billingAccountId"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully de-associated"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/resourceManager/v2/organizations/mergeRootOrganizations" : {
      "post" : {
        "tags" : [ "Organization" ],
        "summary" : "To merge root organizations",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "mergeRootOrganizations",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-ROOT-ORG",
          "in" : "header",
          "description" : "Root Organization resource ID (Optional, while creating a topmost parent organization. Required, for all other scenarios)",
          "required" : false,
          "example" : "11123412123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/mergeOrganizationRequest"
        },
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/projects/movements" : {
      "patch" : {
        "tags" : [ "Project" ],
        "summary" : "To activate the internal movement of a project",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "projectMovement1",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/MovementRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Successfully moved project"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/projects/defaultProject" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "To retrieve default project for a particular customer organization",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "getDefaultProject",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "required" : true,
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "custOrgId",
          "in" : "query",
          "description" : "Customer organization id for which the default project is needed",
          "required" : false,
          "example" : 74399,
          "schema" : {
            "type" : "string",
            "minLength" : 1
          }
        }, {
          "name" : "userId",
          "in" : "query",
          "description" : "Auth0 user id for which the default project is needed. Could come in the X-AUTH-ACTOR header. One of userId and userKey can be sent, depending on whether the product is working with Auth0 or PDS. When userId is sent, custOrgId is a required query param.",
          "required" : false,
          "example" : "8Lj48Z895Dk81234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userKey",
          "in" : "query",
          "description" : "PDS user key for which the default project is needed. One of userId and userKey can be sent, depending on whether the product is working with AUth0 or PDS.",
          "required" : false,
          "example" : "8Lj48Z895Dk81234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "billingAccountNumber",
          "in" : "query",
          "description" : "Billing account number for which the default project is needed",
          "required" : false,
          "example" : "E-1234",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "query",
          "description" : "Resource type defined in CRH resource type definition while onboarding the product. E.g. VIRTUAL_DEVICE, L2_CONNECTION, etc.",
          "required" : false,
          "example" : "VIRTUAL_DEVICE",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intent",
          "in" : "query",
          "description" : "The intent should be one of the intents defined by the product while onboarding to CRH using resource type definition. CRH will use the permission stored in the intent, e.g. networkedge.virtualdevice.create, to fetch set of projects on which user has permissions from AM.",
          "required" : false,
          "example" : "CREATE",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved default project details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DefaultProjectResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Default project not found (neither core or inbox)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ResourceNotFoundError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/organizations/movements" : {
      "patch" : {
        "tags" : [ "Organization" ],
        "summary" : "To activate the internal movement of an organization",
        "description" : "```JWT``` ```SVC```\n",
        "operationId" : "organizationMovement2",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/MovementRequest"
        },
        "responses" : {
          "201" : {
            "description" : "Successfully moved organization"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/organizations/search" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve list of organizations(rootOrgs, 1st level suborgs) by search of org name.",
        "description" : "```JWT```\n",
        "operationId" : "getAllOrganizationsBySearch",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Search containing the input string among organization name, account name or account number",
          "required" : false,
          "example" : "Micro",
          "schema" : {
            "type" : "string",
            "minLength" : 2,
            "maxLength" : 512,
            "pattern" : "^.*\\S.*$"
          }
        }, {
          "name" : "orgLike",
          "in" : "query",
          "description" : "Organization name containing the input string. (Will be deprecated in upcoming releases)",
          "required" : false,
          "example" : "Micro",
          "schema" : {
            "type" : "string",
            "minLength" : 2,
            "maxLength" : 512,
            "pattern" : "^.*\\S.*$"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The data items would be fetched from the user input offset point",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 0,
            "maximum" : 1,
            "example" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "max number of data items that can be fetched in current request",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20,
            "minimum" : 1,
            "example" : 1
          }
        }, {
          "name" : "levels",
          "in" : "query",
          "description" : "Use this to filter organizations by level. A root organization is at level 1, an organization immediately under the root is at level 2 and so on.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            },
            "example" : [ 1 ],
            "default" : [ 1, 2 ]
          },
          "required" : false,
          "explode" : false
        }, {
          "name" : "resourceSubTypes",
          "in" : "query",
          "description" : "Use this to filter organizations by resource subtype",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ResourceSubType"
            },
            "example" : [ "STANDARD" ],
            "default" : [ "STANDARD", "RESELLER", "END_CUSTOMER_ROOT", "END_CUSTOMER" ]
          },
          "required" : false,
          "explode" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved organization details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EquinixPagination"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/organizations/userResourceHierarchy" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve the user resource hierarchy",
        "description" : "```JWT```\n",
        "operationId" : "getUserResourceHierarchyV2",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inboxOption",
          "in" : "query",
          "description" : "Whether to include / exclude inbox resource information in the response or not. <br/> If the options is EXCLUDE (default), then response will have not have inbox resource information. <br/> If the options is INCLUDE, then response will have inbox resource information also. <br/> If the options is ONLY, then response will have inbox resource information only.",
          "allowEmptyValue" : false,
          "schema" : {
            "$ref" : "#/components/schemas/InboxOption"
          },
          "required" : false,
          "example" : "EXCLUDE"
        }, {
          "name" : "resourceId",
          "in" : "query",
          "description" : "Specify the resource node to start from when building the hierarchy. Defaults to the user's root org id. Use this with the <b>maxDepth</b> parameter to fetch the hierarchy in a depth first manner.",
          "required" : false,
          "example" : "852ef988-3975-4835-8c00-9bf96d7c391e",
          "schema" : {
            "type" : "string",
            "default" : "<X-ROOT-ORG>"
          }
        }, {
          "name" : "maxDepth",
          "in" : "query",
          "description" : "Control the depth to traverse for each node while building the hierarchy. E.g.: 1 means 1 level deep - if the resource in context (start node) is a root organization (assume this is level 0), then maxDepth of 1 will fetch first level deep suborgs under it, maxDepth of 2 will fetch the projects under the suborgs as well. Use this with the <b>resourceId</b> parameter to specify the start node. A maxDepth of 0 does not return anything.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 0,
            "minimum" : 0,
            "example" : 1
          }
        }, {
          "name" : "billingAccountId",
          "in" : "query",
          "description" : "Filter user hierarchy resources by billing account id. Returned resources include the resource which owns the billing account id and any other resources where the parent billing account id matches the filter",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "E-204918"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The data items would be fetched from the user input offset point",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 0,
            "minimum" : 0,
            "example" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "max number of data items that can be fetched in current request",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20,
            "minimum" : 1,
            "maximum" : 500,
            "example" : 1
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved user resource hierarchy",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResourceHierarchyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/organizations/userResourceHierarchy/search" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "To retrieve (paginated) hierarchy nodes based on search/filter criteria",
        "description" : "```JWT```\n",
        "operationId" : "searchUserResourceHierarchyV2",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "term",
          "in" : "query",
          "description" : "Full text search term (currently matches against resource name only)",
          "allowEmptyValue" : false,
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "kddi"
        }, {
          "name" : "parentResourceId",
          "in" : "query",
          "description" : "Limit search to descendants under this parentResourceId. Defaults to the user's root org id.",
          "required" : false,
          "example" : "852ef988-3975-4835-8c00-9bf96d7c391e",
          "schema" : {
            "type" : "string",
            "default" : "<X-ROOT-ORG>"
          }
        }, {
          "name" : "maxDepth",
          "in" : "query",
          "description" : "Specify the depth to traverse under each node (recursively) while searching. E.g.: 1 means 1 level deep - if the resource in context (start node) is a root organization (assume this is level 0), then maxDepth of 1 will fetch first level deep suborgs under it, maxDepth of 2 will fetch the projects under the suborgs as well. The default of 0 means hierarchy traversal in a BFS manner.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 0,
            "minimum" : 0,
            "example" : 1
          }
        }, {
          "name" : "resourceType",
          "in" : "query",
          "description" : "Filter search results by resource type",
          "allowEmptyValue" : false,
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ResourceType"
          },
          "example" : "ORG"
        }, {
          "name" : "resourceSubType",
          "in" : "query",
          "description" : "Filter search results by resource subtype",
          "allowEmptyValue" : false,
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ResourceSubType"
            },
            "example" : [ "STANDARD", "RESELLER" ]
          },
          "explode" : false
        }, {
          "name" : "inboxOption",
          "in" : "query",
          "description" : "Whether to include / exclude or fetch only inbox resource information in the response or not. <br/> If the options is EXCLUDE (default), then response will have not have inbox resource information. <br/> If the options is INCLUDE, then response will have inbox resource information also. <br/> If the options is ONLY, then response will have inbox resource information only.",
          "allowEmptyValue" : false,
          "schema" : {
            "$ref" : "#/components/schemas/InboxOption"
          },
          "required" : false,
          "example" : "EXCLUDE"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Organization / Project status (Comma separated) - to filter the organization, projects by status. <br/> LOCKED status represents the organization/project under going merge process.",
          "required" : false,
          "example" : "ACTIVE,LOCKED",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Status"
            },
            "default" : "ACTIVE,LOCKED"
          }
        }, {
          "name" : "includeParent",
          "in" : "query",
          "description" : "Include node matching the parentResourceId query parameter in the search results. This can be useful when building a tree-like/hierarchical UI",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeBreadrumbs",
          "in" : "query",
          "description" : "Fetch breadcrumbs for each search result. Breadcrumbs are a sorted list of resource names starting from the root organization and all intermediate nodes upto the search result node (based on user permission on each node in the breadcrumb trail).",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The data items would be fetched from the user input offset point",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 0,
            "minimum" : 0,
            "example" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "max number of data items that can be fetched in current request",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20,
            "minimum" : 1,
            "maximum" : 100,
            "example" : 1
          }
        }, {
          "name" : "excludeResourceId",
          "in" : "query",
          "description" : "Remove specific resource ids from the search results",
          "allowEmptyValue" : false,
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "69dfabd6-e427-434d-aa80-9ad3e54418a3", "36c0959d-2293-4f3b-90fa-196f39491ac7" ],
            "maxItems" : 20
          },
          "explode" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved user resource hierarchy",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResourceHierarchyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/BadRequestError"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/UnAuthorizedError"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/ForbiddenAccessError"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/resourceManager/v2/organizations/customerOrganization" : {
      "patch" : {
        "tags" : [ "Organization" ],
        "summary" : "To update a CRH root with customer org id information",
        "description" : "```SVC```\nTo associate CRH root with customer org id information. This will enable product toggle accordingly\n",
        "operationId" : "updateCRHRootWithCustomerOrgId",
        "parameters" : [ {
          "name" : "X-CORRELATION-ID",
          "in" : "header",
          "description" : "Unique Id to correlate the requests",
          "example" : "123-1234-456-123",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enableProductToggle",
          "in" : "query",
          "description" : "To enable product toggle",
          "example" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "crhEnabled",
          "in" : "query",
          "description" : "To enable CRH Experience",
          "example" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/pdsEventUpdateModel"
        },
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "examples" : {
                  "schema" : {
                    "$ref" : "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccountResponse" : {
        "type" : "object",
        "properties" : {
          "accountNumber" : {
            "type" : "string",
            "example" : "1300266523"
          },
          "portalReferenceKey" : {
            "type" : "string",
            "example" : "CUST_ORG_ID:CRH-681715:21530"
          }
        },
        "title" : "AccountResponse"
      },
      "AddressDetail" : {
        "type" : "object",
        "properties" : {
          "addressLine1" : {
            "type" : "string"
          },
          "addressLine2" : {
            "type" : "string"
          },
          "addressLine3" : {
            "type" : "string"
          },
          "addressLine4" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "countryCode" : {
            "type" : "string"
          },
          "county" : {
            "type" : "string"
          },
          "province" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "zipCode" : {
            "type" : "string"
          }
        },
        "title" : "AddressDetail"
      },
      "AppMetaData" : {
        "type" : "object",
        "required" : [ "name", "number" ],
        "properties" : {
          "number" : {
            "type" : "string",
            "example" : "0001",
            "description" : "App number"
          },
          "name" : {
            "type" : "string",
            "example" : "Edge products",
            "description" : "App Name"
          }
        },
        "title" : "AppMetaData"
      },
      "AppResponse" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "string",
            "example" : "0001",
            "description" : "App number"
          },
          "name" : {
            "type" : "string",
            "example" : "Edge",
            "description" : "App Name"
          },
          "description" : {
            "type" : "string",
            "example" : "Edge products",
            "description" : "App Description"
          },
          "logo" : {
            "type" : "string",
            "example" : "Sample logo",
            "description" : "App Logo"
          },
          "url" : {
            "type" : "string",
            "example" : "Sample url",
            "description" : "App Url"
          },
          "key" : {
            "type" : "string",
            "example" : "edge",
            "description" : "App Key"
          }
        },
        "title" : "AppResponse"
      },
      "AssociatedBillingAccountsRequest" : {
        "type" : "object",
        "required" : [ "projectIds" ],
        "properties" : {
          "projectIds" : {
            "type" : "array",
            "example" : [ "121", "122", "123" ],
            "description" : "List of Project ids",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AssociatedBillingAccountsResponse" : {
        "type" : "object",
        "properties" : {
          "project" : {
            "type" : "object",
            "$ref" : "#/components/schemas/ProjectWithId"
          }
        }
      },
      "Contact" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          }
        },
        "title" : "Contact"
      },
      "CrhRootOrgProductResponse" : {
        "type" : "object",
        "properties" : {
          "crhRootOrgProducts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CrhRootOrgProducts"
            }
          }
        }
      },
      "CrhRootOrgProducts" : {
        "type" : "object",
        "properties" : {
          "crhEnabled" : {
            "type" : "boolean",
            "example" : true
          },
          "rootOrgId" : {
            "type" : "string",
            "example" : "200021"
          },
          "custOrgId" : {
            "type" : "string",
            "example" : "1234"
          },
          "enabledProducts" : {
            "type" : "array",
            "example" : [ "FABRIC", "NE" ],
            "items" : {
              "type" : "string"
            }
          },
          "products" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CrhProducts"
            }
          }
        }
      },
      "CrhProducts" : {
        "type" : "object",
        "properties" : {
          "resourceType" : {
            "type" : "string",
            "example" : "L2_Connection"
          },
          "product" : {
            "type" : "string",
            "example" : "ECX"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "CustOrgToBeAssociatedRequest" : {
        "type" : "object",
        "required" : [ "crhRootOrgId", "customerOrganizationId" ],
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Customer organization association status",
            "enum" : [ "AVAILABLE_TO_ASSOCIATE", "ASSOCIATE_IN_PROGRESS" ],
            "example" : "AVAILABLE_TO_ASSOCIATE"
          },
          "crhRootOrgId" : {
            "type" : "string",
            "description" : "CRH root organization ID",
            "example" : 123132424
          },
          "customerOrganizationId" : {
            "type" : "string",
            "example" : "121",
            "description" : "Customer organization ID",
            "items" : {
              "type" : "string"
            }
          },
          "parentResellerOrganizationId" : {
            "type" : "string",
            "description" : "Parent Reseller organization ID",
            "example" : 23242323
          }
        }
      },
      "CustOrgToBeAssociatedResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Customer organization association status",
            "enum" : [ "AVAILABLE_TO_ASSOCIATE", "ASSOCIATE_IN_PROGRESS" ],
            "example" : "AVAILABLE_TO_ASSOCIATE"
          },
          "customerOrganizationId" : {
            "type" : "string",
            "description" : "Customer organization ID",
            "example" : 123
          },
          "customerOrganizationName" : {
            "type" : "string",
            "description" : "Customer organization name",
            "example" : "Equinix"
          },
          "parentCustomerOrganizationId" : {
            "type" : "string",
            "description" : "Parent customer organization ID",
            "example" : 1123
          },
          "isReseller" : {
            "type" : "boolean",
            "description" : "Is reseller organization or not",
            "example" : false
          },
          "isSubCustomer" : {
            "type" : "boolean",
            "description" : "Is subCustomer organization or not",
            "example" : false
          }
        }
      },
      "CustomerOrganizationInfo" : {
        "type" : "object",
        "required" : [ "organizationId", "organizationName" ],
        "properties" : {
          "organizationId" : {
            "type" : "string",
            "description" : "Customer organization ID",
            "example" : 123
          },
          "organizationName" : {
            "type" : "string",
            "description" : "Customer organization name",
            "example" : "Equinix"
          },
          "status" : {
            "type" : "string",
            "description" : "Customer organization status",
            "example" : "Active"
          },
          "parentOrganizationId" : {
            "type" : "string",
            "description" : "Parent organization ID",
            "example" : 1123
          },
          "isReseller" : {
            "type" : "boolean",
            "description" : "Is reseller organization or not",
            "example" : false
          },
          "isSubCustomer" : {
            "type" : "boolean",
            "description" : "Is subCustomer organization or not",
            "example" : false
          }
        }
      },
      "CustomerProductToggleRequest" : {
        "type" : "object",
        "properties" : {
          "products" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "example" : [ "NE", "FABRIC" ]
            }
          },
          "projectId" : {
            "type" : "string",
            "description" : "Project Id Information",
            "example" : "1234"
          }
        }
      },
      "CustomerToggleProducts" : {
        "type" : "object",
        "properties" : {
          "resourceType" : {
            "type" : "string",
            "example" : "L2_CONNECTION",
            "description" : "Product Type information"
          },
          "product" : {
            "type" : "string",
            "example" : "FABRIC",
            "description" : "Product Suite Information"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Is product toggled in CRH or not"
          },
          "referenceId" : {
            "type" : "string",
            "example" : "1242-232-24242",
            "description" : "Refernce ID for the toggle"
          },
          "custOrgId" : {
            "type" : "string",
            "example" : "7033",
            "description" : "Customer Organization id"
          },
          "txnStatus" : {
            "type" : "string",
            "example" : "SUCCESS",
            "description" : "Toggle status"
          },
          "txnStatusOwner" : {
            "type" : "string",
            "example" : "CRH",
            "description" : "Owner for the toggle"
          },
          "txnReferenceId" : {
            "type" : "string",
            "example" : "123-2324-232",
            "description" : "Transaction Reference Id"
          },
          "txnErrorDescription" : {
            "type" : "string",
            "example" : "Internal Server Error",
            "description" : "Error details useful for debugging"
          },
          "projectId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Project Id information"
          }
        }
      },
      "CustOrgAssociationStatus" : {
        "type" : "string",
        "enum" : [ "AVAILABLE_TO_ASSOCIATE", "ASSOCIATE_IN_PROGRESS" ]
      },
      "ProductResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1,
            "description" : "Product Id"
          },
          "name" : {
            "type" : "string",
            "example" : "Cross connect",
            "description" : "Product Name"
          },
          "description" : {
            "type" : "string",
            "example" : "Cross connect service",
            "description" : "Product Description"
          },
          "logo" : {
            "type" : "string",
            "example" : "Sample logo",
            "description" : "Product Logo"
          },
          "url" : {
            "type" : "string",
            "example" : "Sample url",
            "description" : "Product Url"
          },
          "app" : {
            "$ref" : "#/components/schemas/AppMetaData"
          }
        },
        "title" : "ProductResponse"
      },
      "ErrorModel" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string",
            "example" : "EQ-1301100"
          },
          "errorMessage" : {
            "type" : "string",
            "example" : "Error message"
          },
          "correlationId" : {
            "type" : "string",
            "example" : "123456789"
          },
          "details" : {
            "type" : "string"
          },
          "help" : {
            "type" : "string"
          },
          "additionalInfo" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "ProductToggleResponse" : {
        "type" : "object",
        "properties" : {
          "productToggleList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerToggleProducts"
            }
          }
        }
      },
      "ProjectResponse" : {
        "type" : "object",
        "required" : [ "projectId", "projectName", "labels", "parentOrganizationId" ],
        "properties" : {
          "projectId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Project Id"
          },
          "projectName" : {
            "type" : "string",
            "example" : "Default Project",
            "description" : "Project Name"
          },
          "parentOrganizationId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Parent organization id"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "application" : "Network Edge"
            },
            "description" : "Resource Labels as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ProjectWithId" : {
        "type" : "object",
        "properties" : {
          "projectId" : {
            "type" : "string",
            "example" : "121",
            "description" : "Project ID"
          },
          "billingAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ResourceBillingAccountsAssociationResponse"
            }
          }
        }
      },
      "ResourceBillingAccountsAssociationResponse" : {
        "type" : "object",
        "properties" : {
          "billingAccountId" : {
            "type" : "string",
            "example" : "1000",
            "description" : "Billing Account Id Information"
          },
          "billingAccountNumber" : {
            "type" : "string",
            "example" : "1000",
            "description" : "Billing account number information"
          },
          "billingAccountName" : {
            "type" : "string",
            "example" : "Web Henderson",
            "description" : "Billing Account Name"
          },
          "status" : {
            "type" : "string",
            "example" : "Active",
            "description" : "Billing Account Status"
          },
          "countryCode" : {
            "type" : "string",
            "example" : "US",
            "description" : "Billing Account ISO Country Code"
          },
          "country" : {
            "type" : "string",
            "example" : "United States",
            "description" : "Billing Account Country Name"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD",
            "description" : "Billing Account Currency Code"
          },
          "operationalUnit" : {
            "type" : "string",
            "example" : "0131-EQUINIX",
            "description" : "Operational Unit of a Billing Account"
          },
          "operationalUnitMetros" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "example" : [ "ME", "SY" ],
            "description" : "Metros for the Operational Unit"
          },
          "operationalUnitIbxs" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "example" : [ "ME1", "SY1" ],
            "description" : "Operational Unit IBXs"
          },
          "isGlobal" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Reports whether account is a global or regional account"
          },
          "signatureRequired" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Signature Required Account or not"
          },
          "poBearing" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Po Bearing Account or Not"
          },
          "default" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Is the default Account or not"
          },
          "custOrgId" : {
            "type" : "string",
            "example" : "123",
            "description" : "Customer Organization ID"
          },
          "custOrgName" : {
            "type" : "string",
            "example" : "Equinix",
            "description" : "Customer Organization Name"
          },
          "billingAccountUcmId" : {
            "type" : "string",
            "example" : "abc-d12-efg-dffd",
            "description" : "Billing Account UCM ID"
          },
          "parentBillingAccountId" : {
            "type" : "string",
            "example" : "12345",
            "description" : "Parent Billing Account Id"
          },
          "parentBillingAccountNumber" : {
            "type" : "string",
            "example" : "12322",
            "description" : "Parent Billing Account Number"
          },
          "resellerUserName" : {
            "type" : "string",
            "example" : "username",
            "description" : "Reseller username"
          },
          "resellerUserKey" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Reseller userKey"
          },
          "isReseller" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Is Reseller or Not"
          },
          "isSubCustomer" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Is subCustomer or Not"
          }
        },
        "title" : "ResourceBillingAccountsAssociationResponse"
      },
      "resourceMetaUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "custOrgId" : {
            "type" : "string",
            "example" : 90105,
            "description" : "PDS Customer Organization Id"
          },
          "classification" : {
            "type" : "string",
            "example" : "inbox",
            "description" : "CRH resource classification depending on migration type"
          },
          "limitSubOrgHierarchyLevel" : {
            "type" : "integer",
            "minimum" : 1,
            "maximum" : 8,
            "description" : "Maximum number of sub-orgs that can exist at any level under this resource"
          },
          "owner" : {
            "type" : "string",
            "example" : "XYZ Inc",
            "description" : "Owner of the resource"
          },
          "ownerId" : {
            "type" : "string",
            "example" : "73891a3c-e195-4b62-b4aa-aaafaa96540b",
            "description" : "Owner id of the resource"
          },
          "allowSiblings" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Toggle automatic CRH migrations for sibling customer organizations for this resource"
          },
          "netNewCustomer" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Is this is a self registered customer?"
          }
        },
        "additionalProperties" : true
      },
      "ResourceMetaUpdateResponse" : {
        "type" : "object",
        "properties" : {
          "resourceId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "CRH Resource id"
          },
          "resourceName" : {
            "type" : "string",
            "example" : "ABC Inc.",
            "description" : "CRH Resource name"
          },
          "status" : {
            "type" : "string",
            "example" : "ACTIVE",
            "description" : "Resource status in CRH",
            "enum" : [ "ACTIVE", "NEW", "FAILED", "TERMINATED", "INACTIVE", "LOCKED", "DELETED" ]
          },
          "resourceType" : {
            "type" : "string",
            "example" : "ORG",
            "description" : "Resource type in CRH",
            "enum" : [ "ORG", "PROJECT", "SERVICE" ]
          },
          "resourceSubType" : {
            "type" : "string",
            "example" : "RESELLER",
            "description" : "Resource subtype in CRH",
            "enum" : [ "RESELLER", "END_CUSTOMER_ROOT", "END_CUSTOMER" ]
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : true
          },
          "meta" : {
            "$ref" : "#/components/schemas/resourceMetaUpdateRequest"
          }
        }
      },
      "RootOrgEnabledResponse" : {
        "type" : "object",
        "properties" : {
          "crhEnabled" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Enabled or Not"
          },
          "rootOrgId" : {
            "type" : "string",
            "example" : "232141",
            "description" : "Root Org Resource ID"
          },
          "isNewCustomer" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Existing or a New Customer"
          },
          "isResellerCustomer" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Is a Reseller or Not"
          },
          "isSubCustomer" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Is a subCustomer or Not"
          }
        },
        "title" : "RootOrgEnabledResponse"
      },
      "updateBillingAccountRequest" : {
        "type" : "object",
        "required" : [ "signatureRequired", "poBearing" ],
        "properties" : {
          "signatureRequired" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Signature Required"
          },
          "poBearing" : {
            "type" : "boolean",
            "example" : false,
            "description" : "PO Bearing"
          }
        }
      },
      "updateOrganizationSubTypeRequest" : {
        "type" : "object",
        "required" : [ "resourceSubType" ],
        "properties" : {
          "resourceSubType" : {
            "type" : "string",
            "example" : "RESELLER",
            "description" : "Organization subType"
          }
        }
      },
      "orgSubTypeUpdateRequest" : {
        "type" : "object",
        "required" : [ "newSubType", "organizationIds" ],
        "properties" : {
          "organizationIds" : {
            "type" : "array",
            "example" : [ "ssfsd-fds-fddder-dsdgdg", "ssfsd-fds-fddder-dsdgdh" ],
            "description" : "List of Organization resource ids",
            "items" : {
              "type" : "string"
            }
          },
          "newSubType" : {
            "type" : "string",
            "example" : "RESELLER",
            "description" : "Organization new subType to be updated"
          }
        }
      },
      "ProjectAssetsMoveRequest" : {
        "type" : "object",
        "properties" : {
          "destinationResourceId" : {
            "type" : "string",
            "example" : "f4107945-08c8-44a1-b815-30196a9e1ceb",
            "description" : "Destination Project Resource Id"
          },
          "sourceResourceIds" : {
            "type" : "array",
            "example" : [ "f4107945-08c8-44a1-b815-30196a9e1cea", "f4107945-08c8-44a1-b815-30196a9e1ceb" ],
            "description" : "List of Source Project Resource Ids to be moved",
            "items" : {
              "type" : "string"
            }
          }
        },
        "title" : "ProjectAssetsMoveRequest"
      },
      "MovementRequest" : {
        "type" : "object",
        "properties" : {
          "resourceId" : {
            "type" : "string",
            "example" : "1000",
            "description" : "Resource ID Information"
          },
          "destinationParentId" : {
            "type" : "string",
            "example" : "1111",
            "description" : "Destination Parent Node"
          }
        },
        "title" : "MovementRequest"
      },
      "ResourceBillingAccountsAssociationRequest" : {
        "type" : "object",
        "properties" : {
          "billingAccountId" : {
            "type" : "string",
            "example" : "1000",
            "description" : "billing account ID, which needs to be associated to the resource"
          },
          "defaultAccount" : {
            "type" : "boolean",
            "description" : "Whether this account can be used as default account, while placing an order. By default, it's true."
          }
        },
        "title" : "ResourceBillingAccountsAssociationRequest"
      },
      "resourceMergeRequest" : {
        "type" : "object",
        "required" : [ "sourceIds", "destinationId", "operation" ],
        "properties" : {
          "sourceIds" : {
            "type" : "array",
            "example" : [ "3b8de4fc-2b41-451a-9cf5-71e569677e67", "75d8e577-2ef4-48e2-aebd-ac78d360d8fa" ],
            "description" : "Source Id information",
            "items" : {
              "type" : "string"
            }
          },
          "destinationId" : {
            "type" : "string",
            "example" : "75d8e577-2ef4-48e2-aebd-ac78d360d8fa",
            "description" : "Destination Id information"
          },
          "operation" : {
            "type" : "string",
            "enum" : [ "BILLING_ACCOUNT_ASSOCIATION", "ORG", "PROJECT" ],
            "example" : "ORG",
            "description" : "Type of the merge operation"
          }
        }
      },
      "createOrganizationRequest" : {
        "type" : "object",
        "required" : [ "organizationName", "parentOrganizationId", "labels" ],
        "properties" : {
          "organizationName" : {
            "type" : "string",
            "example" : "Equinix",
            "description" : "Organization name"
          },
          "parentOrganizationId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Parent organization id"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "application" : "Network Edge"
            },
            "description" : "Resource Labels as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "meta" : {
            "type" : "object",
            "description" : "Contain multiple key-value pairs, some of them are listed below",
            "properties" : {
              "limitSubOrgHierarchyLevel" : {
                "type" : "string",
                "example" : "6",
                "description" : "Limiting the sub org level hierarchy, only applicable for Root Org"
              }
            }
          },
          "migrateCustOrgList" : {
            "type" : "array",
            "example" : [ 123, 234 ],
            "description" : "List of Cust Org to be migrated as part of root org creation request",
            "items" : {
              "type" : "string"
            }
          },
          "organizationType" : {
            "type" : "string",
            "enum" : [ "RESELLER", "END_CUSTOMER" ],
            "example" : "RESELLER",
            "description" : "Type of the organization"
          },
          "parentResellerId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Parent Reseller resource ID, required when creating an End customer Root Org"
          }
        }
      },
      "organizationMergeRequest" : {
        "type" : "object",
        "anyOf" : [ {
          "required" : [ "destinationId", "sourceIds" ],
          "properties" : {
            "destinationId" : {
              "$ref" : "#/components/schemas/organizationMergeRequest/properties/destinationId"
            },
            "sourceIds" : {
              "$ref" : "#/components/schemas/organizationMergeRequest/properties/sourceIds"
            }
          }
        }, {
          "required" : [ "destinationResourceId", "sourceResourceIds" ],
          "properties" : {
            "destinationResourceId" : {
              "$ref" : "#/components/schemas/organizationMergeRequest/properties/destinationResourceId"
            },
            "sourceResourceIds" : {
              "$ref" : "#/components/schemas/organizationMergeRequest/properties/sourceResourceIds"
            }
          }
        } ],
        "properties" : {
          "destinationId" : {
            "type" : "string",
            "example" : "123456",
            "description" : "Destination Organization Id"
          },
          "sourceIds" : {
            "type" : "array",
            "example" : [ "457856", "872235" ],
            "description" : "List of Source Cust Org Ids to be merged as per of the merge organization request",
            "items" : {
              "type" : "string"
            }
          },
          "destinationResourceId" : {
            "type" : "string",
            "example" : "f4107945-08c8-44a1-b815-30196a9e1ceb",
            "description" : "Destination Organization Resource Id"
          },
          "sourceResourceIds" : {
            "type" : "array",
            "example" : [ "f4107945-08c8-44a1-b815-30196a9e1cea", "f4107945-08c8-44a1-b815-30196a9e1ceb" ],
            "description" : "List of Source Organization Resource Ids to be merged as per of the merge organization request",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "OrganizationMergeStatusPagination" : {
        "properties" : {
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationMergeStatus"
            }
          }
        }
      },
      "OrganizationMergeStatus" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string",
            "example" : "123456",
            "description" : "Request Id"
          },
          "status" : {
            "type" : "string",
            "example" : "COMPLETE",
            "description" : "organization merge status"
          },
          "statusDescription" : {
            "type" : "string",
            "example" : "Completed",
            "description" : "organization merge status description"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorModel"
            }
          }
        }
      },
      "OnboardCustOrgAsAssociateRequest" : {
        "type" : "object",
        "required" : [ "crhRootOrgId", "customerOrganizationIds", "resellerOrganizationId" ],
        "properties" : {
          "crhRootOrgId" : {
            "type" : "string",
            "description" : "Root organization ID",
            "example" : 1232321
          },
          "customerOrganizationIds" : {
            "type" : "array",
            "example" : [ "1234", "23423" ],
            "description" : "List of customer organizations IDs",
            "items" : {
              "type" : "string"
            }
          },
          "resellerOrganizationId" : {
            "type" : "string",
            "description" : "Reseller organization UUID",
            "example" : "6ea85644-9c63-11ed-a8fc"
          }
        }
      },
      "UpdateCustOrgMappingRequest" : {
        "type" : "object",
        "properties" : {
          "resourceDestinationHierarchy" : {
            "type" : "string",
            "description" : "Resource destination hierarchy",
            "default" : "core",
            "enum" : [ "core", "inbox" ],
            "example" : "core"
          }
        }
      },
      "CustOrgMappingResponse" : {
        "type" : "object",
        "properties" : {
          "crhRootOrgId" : {
            "type" : "string",
            "description" : "CRH root organization ID",
            "example" : 123
          },
          "customerOrganizationId" : {
            "type" : "string",
            "description" : "Customer organization ID",
            "example" : 123
          },
          "customerOrganizationName" : {
            "type" : "string",
            "description" : "Customer organization name",
            "example" : "Equinix"
          },
          "resellerOrganizationId" : {
            "type" : "string",
            "description" : "Reseller organization ID",
            "example" : 1123
          },
          "isReseller" : {
            "type" : "boolean",
            "description" : "Is reseller organization or not",
            "example" : false
          },
          "isSubCustomer" : {
            "type" : "boolean",
            "description" : "Is subCustomer organization or not",
            "example" : false
          },
          "isCrhEnabled" : {
            "type" : "boolean",
            "description" : "Is the customer organization enabled for CRH experience or not",
            "example" : false
          },
          "resourceDestinationHierarchy" : {
            "type" : "string",
            "description" : "Destination hierarchy for new resources",
            "enum" : [ "core", "inbox" ],
            "example" : "core"
          },
          "migrationType" : {
            "type" : "string",
            "description" : "whether the customer organization is migrated actively or silently into CRH",
            "enum" : [ "ACTIVE", "SILENT" ],
            "example" : "ACTIVE"
          }
        }
      },
      "createProjectRequest" : {
        "type" : "object",
        "required" : [ "projectName", "parentOrganizationId", "labels" ],
        "properties" : {
          "projectName" : {
            "type" : "string",
            "example" : "CRH project",
            "description" : "Project name"
          },
          "parentOrganizationId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Parent organization id"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "application" : "Network Edge"
            },
            "description" : "Resource Labels as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "updateProjectRequest" : {
        "type" : "object",
        "required" : [ "projectName", "parentOrganizationId", "labels" ],
        "properties" : {
          "projectName" : {
            "type" : "string",
            "example" : "CRH project",
            "description" : "Project name"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "application" : "Network Edge"
            },
            "description" : "Resource Labels as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "meta" : {
            "type" : "object",
            "example" : {
              "custOrgId" : 12345
            },
            "description" : "Resource Meta as JSON key, value pairs"
          }
        }
      },
      "updateOrganizationRequest" : {
        "type" : "object",
        "required" : [ "organizationName", "labels" ],
        "properties" : {
          "organizationName" : {
            "type" : "string",
            "example" : "Equinix",
            "description" : "Organization name"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "application" : "Network Edge"
            },
            "description" : "Resource Labels as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "migrateCustOrgList" : {
            "type" : "array",
            "example" : [ 123, 234 ],
            "description" : "Required, in case of migrating additional customer organizations to the existing root organization",
            "items" : {
              "type" : "string"
            }
          },
          "meta" : {
            "type" : "object",
            "example" : {
              "custOrgId" : 12345
            },
            "description" : "Resource Meta as JSON key, value pairs"
          }
        }
      },
      "OrganizationResponse" : {
        "type" : "object",
        "properties" : {
          "organizationId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Organization Id"
          },
          "organizationName" : {
            "type" : "string",
            "example" : "Default Organization",
            "description" : "Organization Name"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "application" : "Network Edge"
            },
            "description" : "Resource Labels as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "parentOrganizationId" : {
            "type" : "string",
            "example" : "2234",
            "description" : "Parent Organization Id"
          }
        }
      },
      "ResourceAndParentResponse" : {
        "type" : "object",
        "properties" : {
          "resourceId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Resource ID"
          },
          "resourceName" : {
            "type" : "string",
            "example" : "MacDonald's",
            "description" : "Resource Name"
          },
          "resourceType" : {
            "type" : "string",
            "example" : "ORG",
            "description" : "Resource Type"
          },
          "resourceSubType" : {
            "type" : "string",
            "example" : "RESELLER",
            "description" : "Resource Subtype"
          },
          "parent" : {
            "$ref" : "#/components/schemas/ResourceAndParentResponseWithoutParent"
          }
        }
      },
      "ResourceAndParentResponseWithoutParent" : {
        "type" : "object",
        "properties" : {
          "resourceId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Resource ID"
          },
          "resourceName" : {
            "type" : "string",
            "example" : "MacDonald's",
            "description" : "Resource Name"
          },
          "resourceType" : {
            "type" : "string",
            "example" : "ORG",
            "description" : "Resource Type"
          },
          "resourceSubType" : {
            "type" : "string",
            "example" : "RESELLER",
            "description" : "Resource Subtype"
          }
        }
      },
      "EndCustProjectResponse" : {
        "type" : "object",
        "properties" : {
          "endCustRootOrgId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "End Customer Root Organization Id"
          },
          "endCustRootOrgName" : {
            "type" : "string",
            "example" : "Org Name",
            "description" : "End Customer Root Organization Name"
          },
          "endCustProjects" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EndCustProject"
            }
          },
          "accountIds" : {
            "type" : "array",
            "example" : [ "1234", "23423" ],
            "description" : "Billing Account Ids",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "EndCustProject" : {
        "type" : "object",
        "properties" : {
          "projectId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Project Id"
          },
          "projectName" : {
            "type" : "string",
            "example" : "Project Name",
            "description" : "Project Name"
          },
          "meta" : {
            "type" : "object",
            "example" : {
              "classification" : "inbox"
            },
            "description" : "Meta as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "organizationMergeResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "example" : true,
            "description" : "result of validation"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorModel"
            }
          }
        }
      },
      "ProjectAncestorHierarchyResponse" : {
        "type" : "object",
        "properties" : {
          "projectId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Project Id"
          },
          "projectName" : {
            "type" : "string",
            "example" : "Project One",
            "description" : "Project Name"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "class" : "Secondary"
            },
            "description" : "Resource Labels as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ancestors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationResponse"
            }
          }
        }
      },
      "OrganizationTree" : {
        "type" : "object",
        "required" : [ "organizationId", "organizationName", "type", "labels", "children" ],
        "properties" : {
          "organizationId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Organization Id"
          },
          "organizationName" : {
            "type" : "string",
            "example" : "Default Organization",
            "description" : "Organization Name"
          },
          "type" : {
            "type" : "string",
            "example" : "ORG",
            "description" : "Resource Type"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "location" : "APAC"
            },
            "description" : "Resource Labels as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "children" : {
            "type" : "array",
            "items" : {
              "anyOf" : [ {
                "$ref" : "#/components/schemas/OrganizationTree"
              }, {
                "$ref" : "#/components/schemas/ProjectTree"
              } ]
            }
          },
          "organizationType" : {
            "type" : "string",
            "enum" : [ "RESELLER", "END_CUSTOMER" ],
            "example" : "RESELLER",
            "description" : "Type of the organization"
          }
        }
      },
      "ProjectTree" : {
        "type" : "object",
        "required" : [ "projectId", "projectName", "type", "labels", "children" ],
        "properties" : {
          "projectId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Project Id"
          },
          "projectName" : {
            "type" : "string",
            "example" : "Default Project",
            "description" : "Project Name"
          },
          "type" : {
            "type" : "string",
            "example" : "PROJECT",
            "description" : "Resource Type"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "default" : "DEFAULT PROJECT"
            },
            "description" : "Resource Labels as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssetResponse"
            }
          }
        }
      },
      "AssetResponse" : {
        "type" : "object",
        "properties" : {
          "assetId" : {
            "type" : "string",
            "example" : "1234"
          },
          "assetName" : {
            "type" : "string",
            "example" : "Cisco CSRv001"
          },
          "product" : {
            "type" : "string",
            "example" : "Edge Metal"
          },
          "accountNumber" : {
            "type" : "string",
            "example" : "50001"
          }
        },
        "title" : "AssetResponse"
      },
      "CrhResourceTree" : {
        "type" : "object",
        "properties" : {
          "resources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource"
            }
          },
          "inboxResources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource"
            }
          },
          "rootOrgId" : {
            "type" : "string"
          }
        },
        "title" : "CrhResourceTree"
      },
      "InboxOption" : {
        "type" : "string",
        "enum" : [ "EXCLUDE", "INCLUDE", "ONLY" ]
      },
      "AccountInfo" : {
        "type" : "object",
        "properties" : {
          "accountName" : {
            "type" : "string",
            "description" : "Name of the account"
          },
          "accountNumber" : {
            "type" : "string",
            "description" : "Account Number"
          },
          "defaultAccount" : {
            "type" : "boolean",
            "description" : "Is the default Account or not"
          }
        },
        "title" : "AccountInfo"
      },
      "Asset" : {
        "type" : "object",
        "properties" : {
          "accountName" : {
            "type" : "string",
            "description" : "Account Name"
          },
          "accountNumber" : {
            "type" : "string",
            "description" : "Account Number"
          },
          "accountStatus" : {
            "type" : "string",
            "description" : "Account Status"
          },
          "assetId" : {
            "type" : "string",
            "description" : "Asset Id Information"
          },
          "assetName" : {
            "type" : "string",
            "description" : "Asset Name"
          },
          "assetPermissions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Asset Permissions"
          },
          "assetAssociations" : {
            "type" : "array",
            "description" : "An array of all the end Customer details who share the given asset. This will only be sent for Reseller Persona.",
            "items" : {
              "$ref" : "#/components/schemas/AdditionalAssociationModel"
            }
          },
          "assetType" : {
            "type" : "string",
            "description" : "Asset Type"
          },
          "location" : {
            "type" : "string",
            "description" : "Asset Location Detail"
          }
        },
        "title" : "Asset"
      },
      "AdditionalAssociationModel" : {
        "type" : "object",
        "properties" : {
          "assignmentId" : {
            "type" : "integer",
            "example" : 123,
            "description" : "Assignment Id is used to track an assignment of a resource made by Reseller to an end Customer Project."
          },
          "projectId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "End Customer Project Id"
          },
          "accountId" : {
            "type" : "string",
            "example" : "12876481246",
            "description" : "Billing Account ID"
          },
          "rootOrgId" : {
            "type" : "string",
            "example" : "28767",
            "description" : "End Customer Org Id"
          }
        },
        "title" : "AdditionalAssociation"
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "accountInfo" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountInfo"
            }
          },
          "assets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Asset"
            }
          },
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource"
            }
          },
          "permissions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "resourceId" : {
            "type" : "string"
          },
          "resourceName" : {
            "type" : "string"
          },
          "resourceType" : {
            "type" : "string"
          },
          "subType" : {
            "type" : "string"
          }
        },
        "title" : "Resource"
      },
      "AssetPermission" : {
        "type" : "object",
        "properties" : {
          "resourceType" : {
            "type" : "string"
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "title" : "AssetPermission"
      },
      "CustOrgToBeAssociatedResponsePagination" : {
        "type" : "object",
        "description" : "Paginated data",
        "title" : "Pagination",
        "properties" : {
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustOrgToBeAssociatedResponse"
            }
          }
        }
      },
      "metaObject" : {
        "type" : "object",
        "description" : "All Meta field additional attributes at the Resource level, which may or may not be used for evaluation",
        "properties" : {
          "netNewCustomer" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Identifies if the Root Organization is self registered NNC flow or not",
            "default" : false
          },
          "additionalProperties" : {
            "type" : "object"
          }
        }
      },
      "companyMetaObject" : {
        "type" : "object",
        "description" : "All Meta field that more of additional attributes at the Company level",
        "properties" : {
          "personalUse" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Identifies if the Company is created for Personal Use",
            "default" : false
          },
          "businessUse" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Identifies if the Company is created for Business Use",
            "default" : false
          },
          "selfRegistered" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Identifies if the Company is self registered NNC flow or not",
            "default" : false
          },
          "additionalProperties" : {
            "type" : "object"
          }
        }
      },
      "createCompanyRequest" : {
        "type" : "object",
        "required" : [ "name", "rootOrgId" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Customer ABC",
            "description" : "Company Name"
          },
          "rootOrgId" : {
            "type" : "string",
            "example" : "63162563-0957-4839-89f3-12125edf38de",
            "description" : "Root Organization Id"
          },
          "legalName" : {
            "type" : "string",
            "example" : "Customer ABC Legal",
            "description" : "Company Legal Name"
          },
          "registrationNumber" : {
            "type" : "string",
            "example" : "VAT1232-23232"
          },
          "meta" : {
            "$ref" : "#/components/schemas/companyMetaObject"
          }
        }
      },
      "createRootOrganizationRequest" : {
        "type" : "object",
        "required" : [ "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Customer ABC",
            "description" : "Resource Name"
          },
          "rootOrganizationId" : {
            "type" : "string",
            "example" : "b731cfcc-f619-4dc4-95fa-a4e796226867",
            "description" : "Root Organization Resource Id"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "application" : "Network Edge"
            },
            "description" : "Similar to Tags that can allow filtering a Resource in future",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "descendantResourceType" : {
            "type" : "string",
            "description" : "Descendant Resource types to be created as part of this request",
            "enum" : [ "SUB_ORG", "PROJECT", "ALL", "NONE" ]
          },
          "meta" : {
            "$ref" : "#/components/schemas/metaObject"
          },
          "accountOwnership" : {
            "type" : "object",
            "$ref" : "#/components/schemas/accountOwnership"
          }
        }
      },
      "companyAddressRequest" : {
        "type" : "object",
        "required" : [ "street", "countryCode" ],
        "properties" : {
          "street" : {
            "type" : "string",
            "example" : "29 Acacia Road",
            "description" : "Street Details"
          },
          "apartment" : {
            "type" : "string",
            "example" : "Apartment 123",
            "description" : "Apartment and Suite Name"
          },
          "countryCode" : {
            "type" : "string",
            "example" : "SG",
            "description" : "Country Code Information",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "stateCode" : {
            "type" : "string",
            "example" : "AT",
            "description" : "State Code if available"
          },
          "city" : {
            "type" : "string",
            "example" : "New York",
            "description" : "City Details if available"
          },
          "zipCode" : {
            "type" : "string",
            "example" : "PO1232SD",
            "description" : "Zip Code Details"
          }
        }
      },
      "createHierarchyResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "bd817f15-4356-4b9a-993d-54d4f743342f",
            "description" : "Resource Id"
          },
          "name" : {
            "type" : "string",
            "example" : "Customer ABC ROOT",
            "description" : "Root Organization Name"
          },
          "resourceType" : {
            "type" : "string",
            "enum" : [ "ORG", "PROJECT" ],
            "example" : "ORG",
            "description" : "Resource Type"
          },
          "descendants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/createResourceResponse"
            }
          }
        }
      },
      "createResourceResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "a571acd3-2e35-4e1d-bd58-91ee1aae6773",
            "description" : "Resource Id"
          },
          "name" : {
            "type" : "string",
            "example" : "Customer ABC SUBORG",
            "description" : "Root Organization Name"
          },
          "parentOrganizationId" : {
            "type" : "string",
            "example" : "bd817f15-4356-4b9a-993d-54d4f743342f",
            "description" : "Parent Organization Id"
          },
          "resourceType" : {
            "type" : "string",
            "enum" : [ "ORG", "PROJECT" ],
            "example" : "ORG",
            "description" : "Resource Type"
          }
        }
      },
      "createCompanyResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "63162563-0957-4839-89f3-12125edf38de",
            "description" : "Company Id"
          },
          "name" : {
            "type" : "string",
            "example" : "Company ABC",
            "description" : "Company Name"
          }
        }
      },
      "companyAddressResponse" : {
        "type" : "object",
        "required" : [ "id", "companyId", "street" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "2698f9a4-7b29-41ac-8210-f73de735275d",
            "description" : "Address Id"
          },
          "companyId" : {
            "type" : "string",
            "example" : "bd817f15-4356-4b9a-993d-54d4f743342f",
            "description" : "Company Id"
          },
          "street" : {
            "type" : "string",
            "example" : "29 Acacia Road",
            "description" : "Street Details"
          },
          "apartment" : {
            "type" : "string",
            "example" : "Apartment 123",
            "description" : "Apartment and Suite Details"
          },
          "countryCode" : {
            "type" : "string",
            "example" : "SG",
            "description" : "Country Code Information",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "stateCode" : {
            "type" : "string",
            "example" : "AT",
            "description" : "State Code if available"
          },
          "city" : {
            "type" : "string",
            "example" : "New York",
            "description" : "City Details if available"
          },
          "zipCode" : {
            "type" : "string",
            "example" : "PO1232SD",
            "description" : "Zip Code Details"
          }
        }
      },
      "createCompanyAddressResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "2698f9a4-7b29-41ac-8210-f73de735275d",
            "description" : "Address Id"
          }
        }
      },
      "accountOwnership" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "example" : "E-234225",
            "description" : "Account Id Information"
          },
          "rootOrgOwnership" : {
            "type" : "boolean",
            "example" : false,
            "default" : false,
            "description" : "Indicates whether the Ownership attached at subOrg level [false] in a Normal Hierarchy and root level [true] in case of a Endcustomer Hierarchy"
          }
        }
      },
      "GetSubscriptionsByResourceIdPagination" : {
        "type" : "object",
        "description" : "Paginated data",
        "title" : "Pagination",
        "properties" : {
          "pagination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Pagination"
            }, {
              "type" : "object",
              "properties" : {
                "previous" : {
                  "example" : "/resourceManager/v1/{resourceId}/subscriptions?offset=0&limit=20"
                },
                "next" : {
                  "example" : "/resourceManager/v1/{resourceId}/subscriptions?offset=30&limit=20"
                }
              }
            } ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionResponse"
            }
          }
        }
      },
      "GetUserSubscriptionsPagination" : {
        "type" : "object",
        "description" : "Paginated data",
        "title" : "Pagination",
        "properties" : {
          "pagination" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Pagination"
            }, {
              "type" : "object",
              "properties" : {
                "previous" : {
                  "example" : "/resourceManager/v1/subscriptions?offset=0&limit=20"
                },
                "next" : {
                  "example" : "/resourceManager/v1/subscriptions?offset=30&limit=20"
                }
              }
            } ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserSubscriptionsResponse"
            }
          }
        }
      },
      "Pagination" : {
        "type" : "object",
        "title" : "Pagination",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "the data items would be fetched from the user input offset point",
            "example" : 20
          },
          "limit" : {
            "type" : "integer",
            "description" : "max number of data items that can be fetched in current request",
            "example" : 20,
            "default" : 20
          },
          "total" : {
            "type" : "integer",
            "description" : "total number of data items available",
            "example" : 50
          },
          "previous" : {
            "type" : "string",
            "description" : "Url to fetch previous set of paginated data",
            "example" : "/resourceManager/v2/organizations/search?orgLike=Micro&offset=0&limit=20"
          },
          "next" : {
            "type" : "string",
            "description" : "Url to fetch next set of paginated data",
            "example" : "/resourceManager/v2/organizations/search?orgLike=Micro&offset=40&limit=20"
          }
        }
      },
      "MetalOrganizationMigrateRequest" : {
        "type" : "array",
        "items" : {
          "required" : [ "organizationId", "organizationName" ],
          "properties" : {
            "organizationId" : {
              "type" : "string",
              "example" : "8be8b69b-4758-4484-8135-8a9fae20acca",
              "description" : "Organization Id"
            },
            "organizationName" : {
              "type" : "string",
              "example" : "Root Org",
              "description" : "Organization name"
            },
            "parentOrganizationId" : {
              "type" : "string",
              "example" : "2847b9f3-c367-4b50-a423-9d632a9272aa",
              "description" : "Parent organization id"
            },
            "status" : {
              "type" : "string",
              "example" : "ACTIVE, DELETED",
              "description" : "Resource Status"
            },
            "meta" : {
              "type" : "object",
              "example" : {
                "source" : [ "Metal" ],
                "ownerId" : "878bde9e-e780-4bb2-bf26-122edaf4a15f"
              },
              "description" : "Meta Information as JSON key, value pairs",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "MetalOrganizationRequest" : {
        "type" : "object",
        "required" : [ "organizationId", "organizationName" ],
        "properties" : {
          "organizationId" : {
            "type" : "string",
            "example" : "8be8b69b-4758-4484-8135-8a9fae20acca",
            "description" : "Organization Id"
          },
          "organizationName" : {
            "type" : "string",
            "example" : "Root Org",
            "description" : "Organization name"
          },
          "parentOrganizationId" : {
            "type" : "string",
            "example" : "2847b9f3-c367-4b50-a423-9d632a9272aa",
            "description" : "Parent organization id"
          },
          "meta" : {
            "type" : "object",
            "example" : {
              "source" : [ "Metal" ],
              "ownerId" : "878bde9e-e780-4bb2-bf26-122edaf4a15f"
            },
            "description" : "Meta Information as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "createMetalProjectRequest" : {
        "type" : "object",
        "required" : [ "projectId", "projectName", "parentOrganizationId" ],
        "properties" : {
          "projectId" : {
            "type" : "string",
            "example" : "458d8e8b-0d04-40b2-bf68-9892171787ae",
            "description" : "Project Id"
          },
          "projectName" : {
            "type" : "string",
            "example" : "CRH project",
            "description" : "Project name"
          },
          "parentOrganizationId" : {
            "type" : "string",
            "example" : "0e1ea086-c1c1-418c-a68a-fb8d5fa9658e",
            "description" : "Parent organization id"
          },
          "meta" : {
            "type" : "object",
            "example" : {
              "source" : [ "Metal" ],
              "owner" : "081c559e-25b9-4972-8d0f-a8b1957b3ca3"
            },
            "description" : "Meta Information as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "metalProjectResponse" : {
        "type" : "object",
        "properties" : {
          "projectId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Project Id"
          },
          "projectName" : {
            "type" : "string",
            "example" : "Default Organization",
            "description" : "Project Name"
          },
          "parentOrganizationId" : {
            "type" : "string",
            "example" : "2234",
            "description" : "Parent Organization Id"
          },
          "parentOrganizationName" : {
            "type" : "string",
            "example" : "2234",
            "description" : "Parent Organization Name"
          },
          "meta" : {
            "type" : "object",
            "example" : {
              "source" : [ "Metal" ],
              "owner" : "081c559e-25b9-4972-8d0f-a8b1957b3ca3"
            },
            "description" : "Meta Information as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "MetalOrganizationMigrateResponse" : {
        "type" : "object",
        "properties" : {
          "resourceId" : {
            "type" : "string",
            "example" : "8be8b69b-4758-4484-8135-8a9fae20acca",
            "description" : "Resource Id"
          },
          "success" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Resource is successfully persisted or not"
          }
        }
      },
      "PaginatedHierarchyResponse" : {
        "type" : "object",
        "description" : "Paginated Hierarchy Response",
        "title" : "PaginatedHierarchyResponse",
        "properties" : {
          "pagination" : {
            "properties" : {
              "offset" : {
                "type" : "integer",
                "description" : "the data items would be fetched from the user input offset point",
                "example" : 10
              },
              "limit" : {
                "type" : "integer",
                "description" : "max number of data items that can be fetched in current request",
                "example" : 20
              },
              "total" : {
                "type" : "integer",
                "description" : "total number of data items available",
                "example" : 50
              },
              "previous" : {
                "type" : "string",
                "description" : "Url to fetch previous set of paginated data",
                "example" : "/resourceManager/v1/organizations/1234/hierarchy?offset=0&limit=20"
              },
              "next" : {
                "type" : "string",
                "description" : "Url to fetch next set of paginated data",
                "example" : "/resourceManager/v1/organizations/1234/hierarchy?offset=40&limit=20"
              }
            }
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "resourceId", "resourceName", "resourceType", "status" ],
              "properties" : {
                "resourceId" : {
                  "type" : "string",
                  "example" : "1234",
                  "description" : "Resource Id"
                },
                "resourceName" : {
                  "type" : "string",
                  "example" : "Default Organization",
                  "description" : "Resource Name"
                },
                "resourceType" : {
                  "type" : "string",
                  "example" : "ORG",
                  "description" : "Resource Type"
                },
                "labels" : {
                  "type" : "object",
                  "example" : {
                    "key" : "value"
                  },
                  "description" : "Resource Labels as JSON key, value pairs"
                },
                "meta" : {
                  "type" : "object",
                  "example" : {
                    "source" : [ "Metal" ],
                    "ownerId" : "350367000714972"
                  },
                  "description" : "Resource Meta fields as JSON key, value pairs (String, Object)"
                },
                "parentResourceId" : {
                  "type" : "string",
                  "example" : "12313-12313-123123",
                  "description" : "Parent Organization Id"
                },
                "status" : {
                  "type" : "string",
                  "example" : "ACTIVE",
                  "description" : "CRH Resource Status"
                },
                "deleteAllowed" : {
                  "type" : "boolean"
                },
                "endCustomerRootOrgIds" : {
                  "type" : "array",
                  "description" : "List of End customer Root Org Ids associated to this resource",
                  "items" : {
                    "type" : "string",
                    "example" : [ "123123-12312312", "12313292323-23232" ]
                  }
                }
              }
            }
          }
        }
      },
      "UpdateMetalOrganizationRequest" : {
        "type" : "object",
        "required" : [ "organizationName" ],
        "properties" : {
          "organizationName" : {
            "type" : "string",
            "example" : "Equinix",
            "description" : "Organization name"
          },
          "meta" : {
            "type" : "object",
            "example" : {
              "source" : [ "Metal" ],
              "owner" : "081c559e-25b9-4972-8d0f-a8b1957b3ca3"
            },
            "description" : "Meta Information as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "MetalOrganizationResponse" : {
        "type" : "object",
        "properties" : {
          "organizationId" : {
            "type" : "string",
            "example" : "b0901a8a-cb44-4752-9845-868d862eb1b1",
            "description" : "Organization Id"
          },
          "organizationName" : {
            "type" : "string",
            "example" : "Default Organization",
            "description" : "Organization Name"
          },
          "parentOrganizationId" : {
            "type" : "string",
            "example" : "b0901a8a-cb44-4752-9845-868d862eb1b1",
            "description" : "Parent Organization Id"
          },
          "meta" : {
            "type" : "object",
            "example" : {
              "source" : [ "Metal" ],
              "owner" : "081c559e-25b9-4972-8d0f-a8b1957b3ca3"
            },
            "description" : "Meta Information as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "updateMetalProjectRequest" : {
        "type" : "object",
        "required" : [ "projectName" ],
        "properties" : {
          "projectName" : {
            "type" : "string",
            "example" : "CRH project",
            "description" : "Project name"
          },
          "meta" : {
            "type" : "object",
            "example" : {
              "source" : [ "Metal" ],
              "owner" : "081c559e-25b9-4972-8d0f-a8b1957b3ca3"
            },
            "description" : "Meta Information as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "ResourceBillingAccountsOwnershipResponse" : {
        "type" : "object",
        "properties" : {
          "billingAccountId" : {
            "type" : "string",
            "example" : "1000",
            "description" : "Billing Account Id Information"
          },
          "billingAccountNumber" : {
            "type" : "string",
            "example" : "1000",
            "description" : "Billing account number information"
          },
          "billingAccountName" : {
            "type" : "string",
            "example" : "Web Henderson",
            "description" : "Billing Account Name"
          },
          "status" : {
            "type" : "string",
            "example" : "Active",
            "description" : "Billing Account Status"
          },
          "countryCode" : {
            "type" : "string",
            "example" : "US",
            "description" : "Billing Account ISO Country Code"
          },
          "country" : {
            "type" : "string",
            "example" : "United States",
            "description" : "Billing Account Country Name"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD",
            "description" : "Billing Account Currency Code"
          },
          "region" : {
            "type" : "string",
            "example" : "AMER",
            "description" : "Billing Account Region"
          },
          "operationalUnit" : {
            "type" : "string",
            "example" : "0131-EQUINIX",
            "description" : "Operational Unit of a Billing Account"
          },
          "operationalUnitMetros" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "example" : [ "ME", "SY" ],
            "description" : "Metros for the Operational Unit"
          },
          "operationalUnitIbxs" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "example" : [ "ME1", "SY1" ],
            "description" : "Operational Unit IBXs"
          },
          "signatureRequired" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Signature Required Account or not"
          },
          "poBearing" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Po Bearing Account or Not"
          },
          "custOrgId" : {
            "type" : "string",
            "example" : "123",
            "description" : "Customer Organization ID"
          },
          "custOrgName" : {
            "type" : "string",
            "example" : "Equinix",
            "description" : "Customer Organization Name"
          },
          "billingAccountUcmId" : {
            "type" : "string",
            "example" : "abc-d12-efg-dffd",
            "description" : "Billing Account UCM ID"
          },
          "parentBillingAccountId" : {
            "type" : "string",
            "example" : "12345",
            "description" : "Parent Billing Account Id"
          },
          "parentBillingAccountNumber" : {
            "type" : "string",
            "example" : "12322",
            "description" : "Parent Billing Account Number"
          },
          "resellerUserName" : {
            "type" : "string",
            "example" : "username",
            "description" : "Reseller username"
          },
          "resellerUserKey" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Reseller userKey"
          },
          "reseller" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Is Reseller or Not"
          },
          "subCustomer" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Is subCustomer or Not"
          }
        },
        "title" : "ResourceBillingAccountsOwnershipResponse"
      },
      "createSubscriptionRequest" : {
        "type" : "object",
        "required" : [ "subscriptionId" ],
        "properties" : {
          "subscriptionId" : {
            "type" : "string",
            "example" : "2309525e-f67b-4ed9-92cf-7e18001fa9c9",
            "description" : "Valid uuid subscription key"
          }
        }
      },
      "SubscriptionResponse" : {
        "type" : "object",
        "properties" : {
          "subscriptionId" : {
            "type" : "string",
            "example" : "2309525e-f67b-4ed9-92cf-7e18001fa9c9",
            "description" : "Valid subscription key"
          },
          "status" : {
            "type" : "string",
            "example" : "ACTIVE",
            "description" : "Subscription key status"
          },
          "creationDate" : {
            "type" : "string",
            "example" : "2023-05-26T22:47:59.000Z",
            "description" : "Subscription key creation date"
          }
        },
        "title" : "SubscriptionResponse"
      },
      "UserSubscriptionsResponse" : {
        "type" : "object",
        "properties" : {
          "subscriptionId" : {
            "type" : "string",
            "example" : "2309525e-f67b-4ed9-92cf-7e18001fa9c9",
            "description" : "Valid subscription key"
          },
          "status" : {
            "type" : "string",
            "example" : "ACTIVE",
            "description" : "Subscription key status"
          },
          "creationDate" : {
            "type" : "string",
            "example" : "2023-05-26T22:47:59.000Z",
            "description" : "Subscription key creation date"
          },
          "resourceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "1a2632e0-5c4d-450d-bc51-787d172f6078", "7f144df3-eb18-441a-91aa-b7bdb75d33a7" ],
            "description" : "List of Resource Ids"
          }
        },
        "title" : "UserSubscriptionsResponse"
      },
      "ResourceType" : {
        "type" : "string",
        "enum" : [ "ORG", "PROJECT" ]
      },
      "ResourceSubType" : {
        "type" : "string",
        "enum" : [ "STANDARD", "RESELLER", "END_CUSTOMER_ROOT", "END_CUSTOMER" ]
      },
      "Status" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "NEW", "FAILED", "TERMINATED", "INACTIVE", "LOCKED", "DELETED" ]
      },
      "UserResourceHierarchyResponse" : {
        "type" : "object",
        "description" : "Paginated Hierarchy Response",
        "title" : "UserResourceHierarchyResponse",
        "properties" : {
          "pagination" : {
            "properties" : {
              "offset" : {
                "type" : "integer",
                "description" : "the data items would be fetched from the user input offset point",
                "example" : 10
              },
              "limit" : {
                "type" : "integer",
                "description" : "max number of data items that can be fetched in current request",
                "example" : 20
              },
              "total" : {
                "type" : "integer",
                "description" : "total number of data items available",
                "example" : 50
              },
              "previous" : {
                "type" : "string",
                "description" : "Url to fetch previous set of paginated data",
                "example" : "/resourceManager/v2/organizations/userResourceHierarchy?offset=0&limit=20"
              },
              "next" : {
                "type" : "string",
                "description" : "Url to fetch next set of paginated data",
                "example" : "/resourceManager/v2/organizations/userResourceHierarchy?offset=40&limit=20"
              }
            }
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "resourceId" : {
                  "type" : "string",
                  "example" : "88786af4-5ce3-49d1-88a7-842fc69c1233",
                  "description" : "Resource Id"
                },
                "resourceName" : {
                  "type" : "string",
                  "example" : "Default Organization",
                  "description" : "Resource Name"
                },
                "resourceType" : {
                  "type" : "string",
                  "example" : "ORG",
                  "description" : "Resource Type"
                },
                "status" : {
                  "type" : "string",
                  "example" : "ACTIVE",
                  "description" : "CRH Resource Status"
                },
                "meta" : {
                  "type" : "object",
                  "example" : {
                    "application" : "Network Edge"
                  },
                  "description" : "Resource Meta fields as JSON key, value pairs"
                },
                "parentResourceId" : {
                  "type" : "string",
                  "example" : "88786af4-5ce3-49d1-88a7-842fc69c1233",
                  "description" : "Parent Organization Id"
                },
                "resourceSubType" : {
                  "type" : "string",
                  "example" : "END_CUSTOMER",
                  "description" : "Resource SubType"
                },
                "parentResellerId" : {
                  "type" : "string",
                  "example" : "24786af4-5ce3-49d1-88a7-842fc69c1233",
                  "description" : "Parent Reseller Organization Id"
                },
                "breadcrumbs" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  },
                  "example" : [ "Auto_TestData_rootOrg31b153fe5c", "KDDI - Reseller (media) - 2bdf9140", "project 1" ]
                }
              }
            }
          }
        }
      },
      "pdsEventUpdateModel" : {
        "type" : "object",
        "required" : [ "eventId", "eventType", "eventTimestamp", "crhCustOrgId", "pdsCustOrgId" ],
        "properties" : {
          "eventId" : {
            "type" : "string",
            "example" : "5b232b7f-8859-42b5-98d3-1fc13c6c67c7",
            "description" : "Event Id information"
          },
          "eventType" : {
            "type" : "string",
            "example" : "ORG_PROJECT_CREATED",
            "description" : "Event Type"
          },
          "eventTimestamp" : {
            "type" : "string",
            "example" : "2024-02-09T09:09:53.637Z",
            "description" : "Timestamp of the event"
          },
          "crhCustOrgId" : {
            "type" : "string",
            "description" : "CRH resource Id information",
            "example" : "3d219804-4b46-4aa7-88e1-59295aedf588"
          },
          "pdsCustOrgId" : {
            "type" : "integer",
            "description" : "Pds Customer Org Id Information",
            "example" : 1234
          }
        },
        "title" : "pdsEventUpdateModel"
      },
      "mergeOrganizationRequest" : {
        "type" : "object",
        "required" : [ "organizationName", "parentResellerOrganizationId", "endCustomerRootOrganizations", "organizationType" ],
        "properties" : {
          "organizationName" : {
            "type" : "string",
            "example" : "Equinix",
            "description" : "Organization name after the merge operation"
          },
          "parentResellerOrganizationId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Parent reseller organization id"
          },
          "endCustomerRootOrganizations" : {
            "type" : "array",
            "example" : [ 123, 234 ],
            "description" : "List of End Customer Root Organization",
            "items" : {
              "type" : "string"
            }
          },
          "organizationType" : {
            "type" : "string",
            "enum" : [ "END_CUSTOMER", "END_CUSTOMER_ROOT", "RESELLER" ],
            "example" : "END_CUSTOMER",
            "description" : "Type of the organization"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "application" : "Network Edge"
            },
            "description" : "Resource Labels as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "OrganizationSearchResponse" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "example" : [ "IAM", "CSC" ],
            "description" : "Sources or Product names of the organization"
          },
          "rootOrganizationId" : {
            "type" : "string",
            "example" : "2234",
            "description" : "Root Organization Id"
          },
          "rootOrganizationName" : {
            "type" : "string",
            "example" : "Google",
            "description" : "Root Organization Name"
          },
          "organizationId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Organization Id"
          },
          "organizationName" : {
            "type" : "string",
            "example" : "Default Organization",
            "description" : "Organization Name"
          },
          "organizationType" : {
            "type" : "string",
            "enum" : [ "END_CUSTOMER", "END_CUSTOMER_ROOT", "RESELLER" ],
            "example" : "END_CUSTOMER",
            "description" : "Type of the organization"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the organization"
          },
          "customerOrganizationId" : {
            "type" : "string",
            "example" : "128",
            "description" : "Customer Organization Id"
          },
          "customerOrganizationName" : {
            "type" : "string",
            "example" : "Google Inc.",
            "description" : "Customer Organization Name"
          },
          "accounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgSearchAccount"
            }
          }
        }
      },
      "OrgSearchAccount" : {
        "type" : "object",
        "description" : "Organization Account data",
        "title" : "Organization Account data",
        "properties" : {
          "accountName" : {
            "type" : "string",
            "example" : "Google Account",
            "description" : "Billing Account Name"
          },
          "accountNumber" : {
            "type" : "string",
            "example" : "2356",
            "description" : "Billing Account Number"
          },
          "reseller" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Is Reseller billing account or not"
          },
          "creditHold" : {
            "type" : "string",
            "example" : "IBX ACCESS-EQUIP REMOVAL",
            "description" : "Credit Hold information"
          },
          "ibxs" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "example" : [ "SG1", "SG2" ],
            "description" : "List of IBXs"
          }
        }
      },
      "EquinixPagination" : {
        "type" : "object",
        "description" : "Paginated data",
        "title" : "Pagination",
        "properties" : {
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationSearchResponse"
            }
          }
        }
      },
      "ProjectV2Response" : {
        "type" : "object",
        "properties" : {
          "projectId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Project Id"
          },
          "projectName" : {
            "type" : "string",
            "example" : "Default Project",
            "description" : "Project Name"
          },
          "inboxResource" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Inbox Resource or not"
          },
          "parentOrganizationId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Parent organization id"
          },
          "labels" : {
            "type" : "object",
            "example" : {
              "application" : "Network Edge"
            },
            "description" : "Resource Labels as JSON key, value pairs",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "silentProject" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Whether the returned Project is a SILENT project or not"
          },
          "permissions" : {
            "type" : "array",
            "description" : "Available user permissions on the PROJECT resource",
            "items" : {
              "type" : "object",
              "properties" : {
                "actions" : {
                  "type" : "array",
                  "description" : "Permission",
                  "items" : {
                    "type" : "string"
                  },
                  "example" : [ "resourcemanager.project.read", "fabric.l3connection.create" ]
                },
                "resourceType" : {
                  "type" : "string",
                  "description" : "Resource Type",
                  "example" : "L2_CONNECTION"
                }
              }
            }
          }
        }
      },
      "DefaultProjectResponse" : {
        "type" : "object",
        "properties" : {
          "projectId" : {
            "type" : "string",
            "example" : "1234",
            "description" : "Project id"
          },
          "projectName" : {
            "type" : "string",
            "example" : "Default project",
            "description" : "Project name"
          },
          "isInboxProject" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Default project returned is an inbox project. This will be true when a core project matching the request criteria was not found."
          },
          "isPdsAffiliatedProject" : {
            "type" : "boolean",
            "example" : false,
            "description" : "The project was migrated to CRH from PDS. The custOrgId information is contained in the CRH resource metadata when migrated from PDS."
          },
          "isUserPermissibleProject" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Whether user has the permissions passed in the `intent` parameter assigned in AM. If userId or userKey is not passed, this value be null."
          }
        }
      }
    },
    "parameters" : {
      "billingAccountId" : {
        "in" : "path",
        "name" : "billingAccountId",
        "description" : "Billing Account ID",
        "required" : true,
        "example" : 50001,
        "schema" : {
          "type" : "string"
        }
      },
      "defaultAccount" : {
        "in" : "query",
        "name" : "defaultAccount",
        "description" : "Default account selection of the country(account's country) for the organization",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "limitParam" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Limits the number of returned results",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "default" : 20,
          "minimum" : 1,
          "maximum" : 100,
          "example" : 50
        }
      },
      "offsetParam" : {
        "name" : "offset",
        "in" : "query",
        "description" : "Offset from which start returned results",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "default" : 0,
          "minimum" : 0,
          "example" : 0
        }
      }
    },
    "examples" : {
      "BadRequestError" : {
        "value" : {
          "errorCode" : "EQ-1301115",
          "errorMessage" : "A bad request; generally, one or more parameters passed in were incorrect or missing.",
          "additionalInfo" : {
            "timestamp" : "2020-09-17T22:39:26.839Z"
          }
        }
      },
      "UnAuthorizedError" : {
        "value" : {
          "errorCode" : "EQ-1301116",
          "errorMessage" : "You are not authorized to view the resource.",
          "additionalInfo" : {
            "timestamp" : "2020-09-17T22:39:26.839Z"
          }
        }
      },
      "ForbiddenAccessError" : {
        "value" : {
          "errorCode" : "EQ-1301117",
          "errorMessage" : "Forbidden Access Error.",
          "additionalInfo" : {
            "timestamp" : "2020-09-17T22:39:26.839Z"
          }
        }
      },
      "ResourceNotFoundError" : {
        "value" : {
          "errorCode" : "EQ-1301118",
          "errorMessage" : "Resource Not Found.",
          "additionalInfo" : {
            "timestamp" : "2020-09-17T22:39:26.839Z"
          }
        }
      },
      "InternalServerError" : {
        "value" : {
          "errorCode" : "EQ-1301119",
          "errorMessage" : "Some internal server error occurred while processing the request, please contact Equinix support for more details.",
          "additionalInfo" : {
            "timestamp" : "2020-09-17T22:39:26.839Z"
          }
        }
      },
      "ServiceUnavailableError" : {
        "value" : {
          "errorCode" : "EQ-1301120",
          "errorMessage" : "Requested service is unavailable at this moment, please try after some time or contact administrator.",
          "additionalInfo" : {
            "timestamp" : "2020-09-17T22:39:26.839Z"
          }
        }
      },
      "ConflictError" : {
        "value" : {
          "errorCode" : "EQ-1301121",
          "errorMessage" : "The resource name you are requesting is conflicting with other resource's name.",
          "additionalInfo" : {
            "timestamp" : "2020-09-17T22:39:26.839Z"
          }
        }
      },
      "organizationTree" : {
        "value" : {
          "organizationId" : "1234",
          "organizationName" : "Root Org",
          "labels" : {
            "k1" : "v1"
          },
          "children" : [ {
            "organizationId" : "1234-1",
            "organizationName" : "Test Org 1",
            "type" : "ORG",
            "labels" : {
              "k1" : "v1"
            },
            "children" : [ {
              "projectId" : "1234-1-A",
              "projectName" : "Test Org 1.a",
              "type" : "ORG",
              "children" : [ {
                "projectId" : "1234-1-A-1",
                "projectName" : "Test Project1",
                "type" : "PROJECT",
                "children" : [ ]
              } ]
            }, {
              "projectId" : "1234-1-B",
              "projectName" : "Test Project1",
              "type" : "PROJECT",
              "children" : [ {
                "assetId" : "1000",
                "assetName" : "Cisco CSRv001",
                "product" : "Edge Metal",
                "accountNumber" : "50001"
              } ]
            } ]
          } ]
        }
      }
    },
    "requestBodies" : {
      "AssociatedBillingAccountsRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AssociatedBillingAccountsRequest"
            }
          }
        },
        "description" : "Request to fetch billing account associations by list of project ids",
        "required" : true
      },
      "productToggleRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomerProductToggleRequest"
            }
          }
        }
      },
      "CustOrgToBeAssociatedRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustOrgToBeAssociatedRequest"
            }
          }
        },
        "description" : "Request to save customer organization association data for CRH enablement",
        "required" : true
      },
      "resourceMetaUpdateRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/resourceMetaUpdateRequest"
            }
          }
        },
        "description" : "Request to update meta attribute of a resource",
        "required" : true
      },
      "updateBillingAccountRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/updateBillingAccountRequest"
            }
          }
        },
        "description" : "Request to update the organization details",
        "required" : true
      },
      "updateOrganizationSubTypeRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/updateOrganizationSubTypeRequest"
            }
          }
        },
        "description" : "Request to update the organization details",
        "required" : true
      },
      "ProjectAssetsMoveRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProjectAssetsMoveRequest"
            }
          }
        },
        "description" : "Request to move project assets",
        "required" : true
      },
      "MovementRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MovementRequest"
            }
          }
        },
        "description" : "Request to move a resource",
        "required" : true
      },
      "createProjectRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/createProjectRequest"
            }
          }
        },
        "description" : "Request to create project",
        "required" : true
      },
      "updateProjectRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/updateProjectRequest"
            }
          }
        },
        "description" : "Request to update an existing project",
        "required" : true
      },
      "resourceMergeRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/resourceMergeRequest"
            }
          }
        },
        "description" : "Request for a merge operation",
        "required" : true
      },
      "createOrganizationRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/createOrganizationRequest"
            }
          }
        },
        "description" : "Request to create an organization",
        "required" : true
      },
      "organizationMergeRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/organizationMergeRequest"
            }
          }
        },
        "description" : "Request to validate organizations",
        "required" : true
      },
      "organizationMergeStatusPage" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/OrganizationMergeStatusPagination"
            }
          }
        },
        "description" : "Request to check organizations merge statuses",
        "required" : true
      },
      "updateOrganizationRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/updateOrganizationRequest"
            }
          }
        },
        "description" : "Request to update the organization details",
        "required" : true
      },
      "ResourceBillingAccountsAssociationRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ResourceBillingAccountsAssociationRequest"
            }
          }
        },
        "description" : "Request to associate a billing account with an Organization",
        "required" : true
      },
      "OnboardCustOrgAsAssociateRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/OnboardCustOrgAsAssociateRequest"
            }
          }
        },
        "description" : "Request to associate customer organization with another CRH migrated organization",
        "required" : true
      },
      "UpdateCustOrgMappingRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCustOrgMappingRequest"
            }
          }
        },
        "description" : "Request to update migrated customer organization mapping details",
        "required" : true
      },
      "createMetalProjectRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/createMetalProjectRequest"
            }
          }
        },
        "description" : "Request to create project",
        "required" : true
      },
      "MetalOrganizationMigrateRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MetalOrganizationMigrateRequest"
            }
          }
        },
        "description" : "Request to migrate existing metal organizations to CRH",
        "required" : true
      },
      "MetalOrganizationRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MetalOrganizationRequest"
            }
          }
        },
        "description" : "Request to create an organization",
        "required" : true
      },
      "createRootOrganizationRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/createRootOrganizationRequest"
            },
            "examples" : {
              "netNewCustomerRequestWithHierarchy" : {
                "value" : {
                  "name" : "Customer ABC",
                  "meta" : {
                    "netNewCustomer" : true
                  }
                }
              },
              "rootOrganizationRequestWithHierarchy" : {
                "value" : {
                  "name" : "Customer ABC"
                }
              },
              "rootOrganizationRequestWithoutHierarchy" : {
                "value" : {
                  "name" : "Customer ABC",
                  "descendantResourceType" : "NONE"
                }
              },
              "rootOrganizationRequestWithBillingAccountOwnership" : {
                "value" : {
                  "name" : "Customer ABC",
                  "accountOwnership" : {
                    "accountId" : "E-23423432",
                    "rootOrgOwnership" : false
                  }
                }
              },
              "rootOrganizationRequestWithMetaNames" : {
                "value" : {
                  "name" : "Customer ABC",
                  "meta" : {
                    "subOrgName" : "Sub Organization Name",
                    "projectName" : "Project Name information field"
                  }
                }
              },
              "subOrganizationRequest" : {
                "value" : {
                  "name" : "Customer ABC",
                  "rootOrganizationId" : "28c6bbfb-f157-4989-882b-38dc4626d3e2"
                }
              },
              "subOrganizationRequestWithAccountOwnership" : {
                "value" : {
                  "name" : "Customer ABC",
                  "rootOrganizationId" : "28c6bbfb-f157-4989-882b-38dc4626d3e2",
                  "accountOwnership" : {
                    "accountId" : "E-23423432",
                    "rootOrgOwnership" : false
                  }
                }
              }
            }
          }
        },
        "description" : "Request to create resources",
        "required" : true
      },
      "createCompanyAddressRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/companyAddressRequest"
            }
          }
        },
        "description" : "Request to create a Address for a given Company",
        "required" : true
      },
      "createCompanyRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/createCompanyRequest"
            }
          }
        },
        "description" : "Request to create a Company",
        "required" : true
      },
      "createSubscriptionRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/createSubscriptionRequest"
            }
          }
        },
        "description" : "Request to create a subscription key",
        "required" : true
      },
      "mergeOrganizationRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/mergeOrganizationRequest"
            }
          }
        },
        "description" : "Request to update the organization details",
        "required" : true
      },
      "pdsEventUpdateModel" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/pdsEventUpdateModel"
            }
          }
        },
        "description" : "Request to associate a billing account with an Organization",
        "required" : true
      }
    },
    "headers" : {
      "location" : {
        "schema" : {
          "type" : "string"
        },
        "description" : "Response header to denote created resource location(id)",
        "example" : "/resourceManager/v1/organizations/935837000",
        "required" : true
      },
      "createRootOrganizationLocation" : {
        "schema" : {
          "type" : "string"
        },
        "description" : "Response header to denote created resource location(id)",
        "example" : "/resourceManager/v1/rootOrganizations/bd817f15-4356-4b9a-993d-54d4f743342f",
        "required" : true
      },
      "createCompanyAddressLocation" : {
        "schema" : {
          "type" : "string"
        },
        "description" : "Response header to denote created resource location(id)",
        "example" : "/resourceManager/v1/companies/bd817f15-4356-4b9a-993d-54d4f743342f/addresses/2698f9a4-7b29-41ac-8210-f73de735275d",
        "required" : true
      },
      "createCompanyLocation" : {
        "schema" : {
          "type" : "string"
        },
        "description" : "Response header to denote created resource location(id)",
        "example" : "/resourceManager/v1/companies/bd817f15-4356-4b9a-993d-54d4f743342f",
        "required" : true
      },
      "organizationMergeLocation" : {
        "schema" : {
          "type" : "string"
        },
        "description" : "Response header to track the organization merge status",
        "example" : "/resourceManager/v1/organizations/merge/status",
        "required" : true
      }
    },
    "securitySchemes" : {
      "Authorization" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT",
        "description" : "### Required for User jwt access\nFollow below steps to generate bearer token - based on API Gateway Host and user login credentials.\n1. Invoke API Gateway: {{**API Gateway Host**}}/v1/parse/token?username={{**userName**}}&password={{**password**}}&usertype=CRH\n2. Get **jwt_token** value from above API response and pass this value for this header\n"
      },
      "X-AUTH-APIKEY" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "X-AUTH-APIKEY",
        "description" : "### Required for both User jwt and Service Client access\nAPI key - for APIs invocation via API Gateway.\n"
      },
      "X-AUTH-CLIENT-AUTHZ" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "X-AUTH-CLIENT-AUTHZ",
        "description" : "### Required for Service Client access\nFollow below steps to generate bearer token - based on API Gateway Host and service client credentials.\n1. Invoke API Gateway: {{**API Gateway Host**}}/iam/v1/token\n2. Get **Bearer Token** value from above API response and pass this value for this header"
      }
    }
  },
  "x-mock" : true,
  "x-metadata" : {
    "metadata" : {
      "swaggerName" : "8a995d5ee4374574ae8e1c201e9319e5",
      "revision" : 1,
      "documentation" : [ ],
      "category" : [ {
        "name" : "Unsorted",
        "paths" : [ "/catalog/v1/apps", "/catalog/v1/apps/{appNumber}/products", "/catalog/v1/products", "/resourceManager/v1/isCRHMigrated", "/resourceManager/v1/rootOrg", "/resourceManager/v1/associatedAccounts", "/resourceManager/v1/customerOrganization/{custOrgId}", "/resourceManager/v1/customerOrganization/{custOrgId}/productToggle", "/resourceManager/v1/{custOrgId}/inbox", "/resourceManager/v1/projects/{projectId}/permittedParent", "/resourceManager/v1/customerOrganizations/associations", "/resourceManager/v1/customerOrganizations/{customerOrganizationId}/associations", "/resourceManager/i1/organizations/{orgId}/meta", "/resourceManager/i1/organizations/hierarchy", "/resourceManager/i1/organizations/{organizationId}/hierarchy", "/resourceManager/v1/organizations", "/resourceManager/v1/organizations/merge", "/resourceManager/v1/organizations/merge/status", "/resourceManager/v1/organizations/merge/validate", "/resourceManager/v1/organizations/{organizationId}", "/resourceManager/v1/organizations/{crhOrganizationId}/accounts/{accountNumber}", "/resourceManager/v1/organizations/{organizationId}/associations", "/resourceManager/v1/organizations/{organizationId}/associations/{billingAccountId}", "/resourceManager/v1/projects", "/resourceManager/v1/projects/{projectId}", "/resourceManager/v1/projects/{projectId}/ancestors", "/resourceManager/v1/projects/{projectId}/associations", "/resourceManager/v1/projects/{projectId}/associations/{billingAccountId}", "/resourceManager/v1/projects/movements", "/resourceManager/v1/projects/{projectId}/parent", "/resourceManager/v1/projects/{resellerId}/reseller", "/resourceManager/v1/organizations/userResourceHierarchy", "/resourceManager/v1/organizations/movements", "/resourceManager/v1/organizations/{organizationId}/parent", "/resourceManager/v1/customerOrganizations/{customerOrganizationId}/mappings", "/resourceManager/v1/customerOrganizations/associate", "/resourceManager/v1/projects/assetPermissions", "/resourceManager/v1/projects/moveAssets", "/resourceManager/v1/metalOrganizations/migrate", "/resourceManager/v1/metalOrganizations", "/resourceManager/v1/metalOrganizations/{organizationId}", "/resourceManager/v1/metalProjects", "/resourceManager/v1/resources/merge", "/resourceManager/v1/organizations/{organizationId}/ownerships", "/resourceManager/v1/metalProjects/{projectId}", "/resourceManager/v1/organizations/{resourceId}/hierarchy", "/resourceManager/v1/subCustRootOrg/movements", "/resourceManager/v1/rootOrganization", "/resourceManager/v1/company", "/resourceManager/v1/companies/{companyId}/address", "/resourceManager/v1/companies/{companyId}/addresses", "/resourceManager/v1/organizations/parent", "/resourceManager/v1/{resourceId}/subscription", "/resourceManager/v1/{resourceId}/subscriptions/{subscriptionId}", "/resourceManager/v1/{resourceId}/subscriptions", "/resourceManager/v1/subscriptions", "/resourceManager/v2/organizations", "/resourceManager/v2/organizations/{organizationId}", "/resourceManager/v2/organizations/{organizationId}/associations", "/resourceManager/v2/organizations/{organizationId}/associations/{billingAccountId}", "/resourceManager/v2/projects", "/resourceManager/v2/projects/{projectId}", "/resourceManager/v2/projects/{projectId}/associations", "/resourceManager/v2/projects/{projectId}/associations/{billingAccountId}", "/resourceManager/v2/organizations/mergeRootOrganizations", "/resourceManager/v2/projects/movements", "/resourceManager/v2/projects/defaultProject", "/resourceManager/v2/organizations/movements", "/resourceManager/v2/organizations/search", "/resourceManager/v2/organizations/userResourceHierarchy", "/resourceManager/v2/organizations/userResourceHierarchy/search", "/resourceManager/v2/organizations/customerOrganization" ]
      } ]
    }
  }
}